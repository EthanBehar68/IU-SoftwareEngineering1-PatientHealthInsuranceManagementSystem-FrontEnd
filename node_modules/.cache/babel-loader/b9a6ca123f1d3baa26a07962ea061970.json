{"ast":null,"code":"var _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport IdleTimer from 'react-idle-timer';\nimport { Provider } from 'react-redux';\nimport { StripeProvider } from 'react-stripe-elements';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { configureStore } from '../store';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../store/actions/auth\";\nimport { setCurrentWorker } from \"../store/actions/workerauth\";\nimport { setCurrentAdmin } from \"../store/actions/adminauth\";\nimport empty from 'is-empty';\nimport Footer from '../components/Nav/Footer';\nimport Main from './Main';\nimport '../css/overall.css';\nimport '../css/navbar.css';\nimport '../css/footer.css';\nimport '../css/signin.css';\nimport '../css/book.css';\nimport '../css/dashboard.css';\nimport '../css/manage.css';\nimport '../css/detail.css';\nimport '../css/workerdashboard.css';\nimport '../css/find.css';\nimport '../css/account.css';\nimport '../css/admin.css';\nimport '../css/react-confirm-alert.css';\nconst store = configureStore();\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token);\n  if (decoded.db == \"customers\") store.dispatch(setCurrentUser(decoded));\n  if (decoded.db == \"admin\") store.dispatch(setCurrentAdmin(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.idleTimer = null;\n    this.onIdle = this._onIdle.bind(this);\n    this.state = {};\n  }\n\n  _onIdle(e) {\n    if (!alert('You have been inactive for 10 minutes. Hit OK to get the latest data.')) {\n      window.location.reload();\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(IdleTimer, {\n      ref: ref => {\n        this.idleTimer = ref;\n      },\n      element: document,\n      onIdle: this.onIdle,\n      debounce: 250,\n      timeout: 1000 * 10 * 60,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(StripeProvider, {\n      apiKey: \"pk_test_jzVfc9MR4WDKN9FVwaLZzj5N\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/App.js"],"names":["React","Component","Fragment","Switch","Route","withRouter","Redirect","connect","IdleTimer","Provider","StripeProvider","BrowserRouter","Router","configureStore","jwt_decode","setAuthToken","setCurrentUser","logoutUser","setCurrentWorker","setCurrentAdmin","empty","Footer","Main","store","localStorage","jwtToken","token","decoded","db","dispatch","currentTime","Date","now","exp","window","location","href","App","constructor","props","idleTimer","onIdle","_onIdle","bind","state","e","alert","reload","render","ref","document"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport IdleTimer from 'react-idle-timer';\nimport {Provider} from 'react-redux';\nimport {StripeProvider} from 'react-stripe-elements';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {configureStore} from '../store';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport {setCurrentUser, logoutUser} from \"../store/actions/auth\";\nimport {setCurrentWorker} from \"../store/actions/workerauth\";\nimport {setCurrentAdmin} from \"../store/actions/adminauth\";\nimport empty from 'is-empty';\n\nimport Footer from '../components/Nav/Footer';\nimport Main from './Main';\n\nimport '../css/overall.css';\nimport '../css/navbar.css';\nimport '../css/footer.css';\nimport '../css/signin.css';\nimport '../css/book.css';\nimport '../css/dashboard.css';\nimport '../css/manage.css';\nimport '../css/detail.css';\nimport '../css/workerdashboard.css';\nimport '../css/find.css';\nimport '../css/account.css';\nimport '../css/admin.css';\nimport '../css/react-confirm-alert.css';\n\nconst store = configureStore();\n\nif(localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  if(decoded.db == \"customers\") store.dispatch(setCurrentUser(decoded));\n  if(decoded.db == \"admin\") store.dispatch(setCurrentAdmin(decoded));\n\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.idleTimer = null;\n    this.onIdle = this._onIdle.bind(this);\n    this.state = {\n    };\n  }\n \n  _onIdle(e) {\n    if(!alert('You have been inactive for 10 minutes. Hit OK to get the latest data.')){window.location.reload();}\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <IdleTimer\n          ref={ref => { this.idleTimer = ref }}\n          element={document}\n          onIdle={this.onIdle}\n          debounce={250}\n          timeout={1000 * 10 * 60} \n        />\n        <StripeProvider apiKey=\"pk_test_jzVfc9MR4WDKN9FVwaLZzj5N\">\n          <Provider store={store}>\n            <Router>\n              <div className=\"content-wrap\">\n                <Main />\n              </div>\n              <Footer/>\n            </Router>\n          </Provider>\n        </StripeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}