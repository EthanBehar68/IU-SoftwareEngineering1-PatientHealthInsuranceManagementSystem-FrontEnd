{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Worker/Manage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { db_get_worker_assignments } from '../../store/actions/assignments';\nimport empty from 'is-empty';\nimport WorkerNavbar from '../../components/Nav/WorkerNavbar';\nimport Row from '../../components/Graphics/Row';\nimport ChartHead from '../../components/Graphics/ChartHead';\nimport Loading from '../../components/Graphics/Loading';\nimport WorkerJobDetail from '../../components/Forms/WorkerJobDetail';\nimport WorkerCompleteJob from '../../components/Forms/WorkerCompleteJob';\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onHide = () => {\n      this.props.history.push(`/worker/dashboard/manage/${this.state.filter}`);\n      document.body.style.overflow = \"auto\";\n    };\n\n    this.setDetail = job => {\n      this.props.history.push(`/worker/dashboard/manage/${this.state.filter}/${job.assignment_id}`);\n      document.body.style.overflow = \"hidden\";\n    };\n\n    this.state = {\n      loaded: false,\n      currentJob: {},\n      filter: !empty(this.props.match.params) ? this.props.match.params.section : \"Pending\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_worker_assignments(this.props.user.id);\n    const filtered = await this.props.assignments.filter(ass => ass.assignment_id == this.props.match.params.id);\n    if (!empty(filtered)) document.body.style.overflow = \"hidden\";\n    this.setState(_objectSpread({}, this.state, {\n      currentJob: !empty(filtered) ? filtered[0] : {},\n      loaded: true\n    }));\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.match.params != this.props.match.params) {\n      const filtered = await this.props.assignments.filter(ass => ass.assignment_id == nextProps.match.params.id);\n      this.setState(_objectSpread({}, this.state, {\n        filter: nextProps.match.params.section,\n        id: nextProps.match.params.id,\n        currentJob: !empty(filtered) ? filtered[0] : {}\n      }));\n    }\n  }\n\n  render() {\n    const filter = this.state.filter;\n    let job_list = this.props.assignments.filter(assignment => assignment.status == filter).map(assignment => React.createElement(Row, {\n      key: assignment.assignment_id,\n      job: assignment,\n      onClick: this.setDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n    const inp = !empty(this.state.currentJob) ? this.state.currentJob.status == \"In-Progress\" : false;\n    const pending_num = this.props.assignments.filter(job => job.status == \"Pending\").length;\n    const scheduled_num = this.props.assignments.filter(job => job.status == \"Scheduled\").length;\n    const in_progress_num = this.props.assignments.filter(job => job.status == \"In-Progress\").length;\n    const completed_num = this.props.assignments.filter(job => job.status == \"Completed\").length;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(WorkerNavbar, {\n      active: \"manage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), inp ? React.createElement(WorkerCompleteJob, {\n      hide: this.onHide,\n      job: this.state.currentJob,\n      scheduled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : !empty(this.state.currentJob) ? React.createElement(WorkerJobDetail, {\n      hide: this.onHide,\n      job: this.state.currentJob,\n      scheduled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : null, !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"manage-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"manage-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"manage-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"manage-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"My Jobs\"), React.createElement(\"span\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"View scheduled jobs and review past jobs.\")), React.createElement(\"div\", {\n      className: \"manage-jobs-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"numbers-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"number-bubble worker\",\n      style: pending_num == 0 ? {\n        opacity: \"0\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, pending_num), React.createElement(\"div\", {\n      className: \"number-bubble worker\",\n      style: scheduled_num == 0 ? {\n        opacity: \"0\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, scheduled_num), React.createElement(\"div\", {\n      className: \"number-bubble worker\",\n      style: in_progress_num == 0 ? {\n        opacity: \"0\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, in_progress_num), React.createElement(\"div\", {\n      className: \"number-bubble worker\",\n      style: completed_num == 0 ? {\n        opacity: \"0\",\n        marginRight: \"0\"\n      } : {\n        marginRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, completed_num)), React.createElement(\"div\", {\n      className: \"jobs-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Pending\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\"\n      } : {},\n      to: \"/worker/dashboard/manage/Pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Pending\"), React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Scheduled\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\"\n      } : {},\n      to: \"/worker/dashboard/manage/Scheduled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Scheduled\"), React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"In-Progress\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\"\n      } : {},\n      to: \"/worker/dashboard/manage/In-Progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"In-Progress\"), React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Completed\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\",\n        borderRight: \"none\"\n      } : {\n        borderRight: \"none\"\n      },\n      to: \"/worker/dashboard/manage/Completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Completed\")), React.createElement(\"div\", {\n      className: \"filter-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Filter by job status with the filters above. Pending status indicates enough workers haven't accepted the job. Scheduled status indicates the job has workers and will take place in the future. Completed status indicates the job has been completed.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"In-Progress status is where you will find jobs that you are currently working on. In order to complete the job, you must draft an invoice by clicking on the in-progress job and filling out the required information.\"), React.createElement(\"div\", {\n      className: \"scheduled-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(ChartHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), job_list.length != 0 && React.createElement(\"div\", {\n      className: \"schedule-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, job_list), job_list.length == 0 && React.createElement(\"div\", {\n      className: \"schedule-chart\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingTop: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"You currently have no \", filter, \" jobs.\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  assignments: state.assignments,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  db_get_worker_assignments\n})(withRouter(Manage));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Worker/Manage.js"],"names":["React","Component","Fragment","Link","withRouter","connect","db_get_worker_assignments","empty","WorkerNavbar","Row","ChartHead","Loading","WorkerJobDetail","WorkerCompleteJob","Manage","constructor","props","onChange","e","setState","target","id","value","onHide","history","push","state","filter","document","body","style","overflow","setDetail","job","assignment_id","loaded","currentJob","match","params","section","componentDidMount","user","filtered","assignments","ass","componentWillReceiveProps","nextProps","render","job_list","assignment","status","map","inp","pending_num","length","scheduled_num","in_progress_num","completed_num","textAlign","opacity","marginRight","background","color","borderRight","display","alignItems","paddingTop","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {db_get_worker_assignments} from '../../store/actions/assignments';\nimport empty from 'is-empty';\n\nimport WorkerNavbar from '../../components/Nav/WorkerNavbar';\nimport Row from '../../components/Graphics/Row';\nimport ChartHead from '../../components/Graphics/ChartHead';\nimport Loading from '../../components/Graphics/Loading';\nimport WorkerJobDetail from '../../components/Forms/WorkerJobDetail';\nimport WorkerCompleteJob from '../../components/Forms/WorkerCompleteJob';\n\nclass Manage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tcurrentJob: {},\n\t\t\tfilter: !empty(this.props.match.params) ? this.props.match.params.section : \"Pending\"\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.props.db_get_worker_assignments(this.props.user.id);\n\t\tconst filtered = await this.props.assignments.filter(ass => ass.assignment_id == this.props.match.params.id);\n\t\tif(!empty(filtered)) document.body.style.overflow = \"hidden\";\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tcurrentJob: !empty(filtered) ? filtered[0] : {},\n\t\t\tloaded: true\n\t\t});\n\t}\n\n\tasync componentWillReceiveProps(nextProps) {\n\t\tif(nextProps.match.params != this.props.match.params) {\n\t\t\tconst filtered = await this.props.assignments.filter(ass => ass.assignment_id == nextProps.match.params.id);\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tfilter: nextProps.match.params.section,\n\t\t\t\tid: nextProps.match.params.id,\n\t\t\t\tcurrentJob: !empty(filtered) ? filtered[0] : {}\n\t\t\t})\n\t\t}\n\t}\n\n  onChange = e => {\n    this.setState({ \n    \t[e.target.id]: e.target.value \n    });\n  };\n\n  onHide = () => {\n  \tthis.props.history.push(`/worker/dashboard/manage/${this.state.filter}`);\n  \tdocument.body.style.overflow = \"auto\";\n  }\n\n  setDetail = job => {\n  \tthis.props.history.push(`/worker/dashboard/manage/${this.state.filter}/${job.assignment_id}`);\n  \tdocument.body.style.overflow = \"hidden\";\n  }\n\n\trender() {\n\t\tconst {filter} = this.state;\n\n\t\tlet job_list = this.props.assignments.filter(assignment => assignment.status == filter).map(assignment => \n\t\t\t<Row \n\t\t\t\tkey={assignment.assignment_id}\n\t\t\t\tjob={assignment}\n\t\t\t\tonClick={this.setDetail}\n\t\t\t/>\n\t\t);\n\n\t\tconst inp = !empty(this.state.currentJob) ? this.state.currentJob.status == \"In-Progress\" : false;\n\n\t\tconst pending_num = this.props.assignments.filter(job => job.status == \"Pending\").length;\n\t\tconst scheduled_num = this.props.assignments.filter(job => job.status == \"Scheduled\").length;\n\t\tconst in_progress_num = this.props.assignments.filter(job => job.status == \"In-Progress\").length;\n\t\tconst completed_num = this.props.assignments.filter(job => job.status == \"Completed\").length;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<WorkerNavbar active=\"manage\"/>\n\t\t\t\t{inp ? <WorkerCompleteJob hide={this.onHide} job={this.state.currentJob} scheduled/> : !empty(this.state.currentJob) ? <WorkerJobDetail hide={this.onHide} job={this.state.currentJob} scheduled/> : null}\n\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t{this.state.loaded && (<div className=\"manage-container\">\n\t\t\t\t\t<div className=\"manage-content\">\n\t\t\t\t\t\t<div className=\"manage-header\">\n\t\t\t\t\t\t\t<span className=\"manage-title\">My Jobs</span>\n\t\t\t\t\t\t\t<span style={{textAlign: \"center\"}}>View scheduled jobs and review past jobs.</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"manage-jobs-body\">\n\t\t\t\t\t\t\t<div className=\"numbers-div\">\n\t\t\t\t\t\t\t\t<div className=\"number-bubble worker\" style={pending_num == 0 ? {opacity: \"0\"} : {}}>{pending_num}</div>\n\t\t\t\t\t\t\t\t<div className=\"number-bubble worker\" style={scheduled_num == 0 ? {opacity: \"0\"} : {}}>{scheduled_num}</div>\n\t\t\t\t\t\t\t\t<div className=\"number-bubble worker\" style={in_progress_num == 0 ? {opacity: \"0\"} : {}}>{in_progress_num}</div>\n\t\t\t\t\t\t\t\t<div className=\"number-bubble worker\" style={completed_num == 0 ? {opacity: \"0\", marginRight: \"0\"} : {marginRight: \"0\"}}>{completed_num}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"jobs-filter\">\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Pending\" ? {background: \"#3f6bb4\", color: \"white\"} : {}} to='/worker/dashboard/manage/Pending'>Pending</Link>\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Scheduled\" ? {background: \"#3f6bb4\", color: \"white\"} : {}} to='/worker/dashboard/manage/Scheduled'>Scheduled</Link>\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"In-Progress\" ? {background: \"#3f6bb4\", color: \"white\"} : {}} to='/worker/dashboard/manage/In-Progress'>In-Progress</Link>\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Completed\" ? {background: \"#3f6bb4\", color: \"white\", borderRight: \"none\"} : {borderRight: \"none\"}} to='/worker/dashboard/manage/Completed'>Completed</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"filter-desc\">\n\t\t\t\t\t\t\t\tFilter by job status with the filters above. Pending status indicates enough workers haven't \n\t\t\t\t\t\t\t\taccepted the job. Scheduled status indicates the job has workers and will take place in the\n\t\t\t\t\t\t\t\tfuture. Completed status indicates the job has been completed.\n\t\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t\tIn-Progress status is where you will find jobs that you are currently working on. In order\n\t\t\t\t\t\t\t\tto complete the job, you must draft an invoice by clicking on the in-progress job and filling\n\t\t\t\t\t\t\t\tout the required information.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"scheduled-container\">\n\t\t\t\t\t\t\t\t<ChartHead/>\n\t\t\t\t\t\t\t\t{job_list.length != 0 && (<div className=\"schedule-chart\">\n\t\t\t\t\t\t\t\t\t{job_list}\n\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t\t{job_list.length == 0 && (<div className=\"schedule-chart\" style={{display: \"flex\", alignItems: \"center\", paddingTop: \"2rem\"}}>\n\t\t\t\t\t\t\t\t\t<span>You currently have no {filter} jobs.</span>\n\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  assignments: state.assignments,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps,{db_get_worker_assignments})(withRouter(Manage));\n\n"]},"metadata":{},"sourceType":"module"}