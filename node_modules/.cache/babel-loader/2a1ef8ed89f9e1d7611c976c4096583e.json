{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Manage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { db_get_customer_jobs } from '../../store/actions/jobs';\nimport empty from 'is-empty';\nimport Navbar from '../../components/Nav/Navbar';\nimport Row from '../../components/Graphics/Row';\nimport ChartHead from '../../components/Graphics/ChartHead';\nimport Loading from '../../components/Graphics/Loading';\nimport JobDetail from '../../components/Forms/JobDetail';\n\nclass Manage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onHide = () => {\n      this.props.history.push(`/app/dashboard/manage/${this.state.filter}`);\n      document.body.style.overflow = \"auto\";\n    };\n\n    this.setDetail = job => {\n      this.props.history.push(`/app/dashboard/manage/${this.state.filter}/${job.id}`);\n      document.body.style.overflow = \"hidden\";\n    };\n\n    this.state = {\n      loaded: false,\n      currentJob: {},\n      filter: !empty(this.props.match.params) ? this.props.match.params.section : \"Pending\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_customer_jobs(this.props.user.id);\n    const filtered = await this.props.jobs.filter(job => job.id == this.props.match.params.id);\n    if (!empty(filtered)) document.body.style.overflow = \"hidden\";\n    this.setState(_objectSpread({}, this.state, {\n      currentJob: !empty(filtered) ? filtered[0] : {},\n      loaded: true\n    }));\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.match.params != this.props.match.params) {\n      const filtered = await this.props.jobs.filter(job => job.id == nextProps.match.params.id);\n      this.setState(_objectSpread({}, this.state, {\n        filter: nextProps.match.params.section,\n        id: nextProps.match.params.id,\n        currentJob: !empty(filtered) ? filtered[0] : {}\n      }));\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          filter = _this$state.filter,\n          currentJob = _this$state.currentJob;\n    let job_list = this.props.jobs.filter(job => job.status == filter || filter == \"Scheduled\" && job.status == \"In-Progress\").map(job => React.createElement(Row, {\n      key: job.id,\n      job: job,\n      onClick: this.setDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n    const pending_num = this.props.jobs.filter(job => job.status == \"Pending\").length;\n    const scheduled_num = this.props.jobs.filter(job => job.status == \"Scheduled\" || job.status == \"In-Progress\").length;\n    const completed_num = this.props.jobs.filter(job => job.status == \"Completed\").length;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      active: \"manage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), !empty(this.state.currentJob) && React.createElement(JobDetail, {\n      hide: this.onHide,\n      job: this.state.currentJob,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"manage-container\",\n      style: !empty(currentJob) ? {\n        overflow: \"hidden\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"manage-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"manage-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"manage-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Manage Jobs\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"View scheduled jobs and review past jobs.\"), React.createElement(Link, {\n      className: \"manage-btn\",\n      to: \"/app/dashboard/book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Book a Job\")), React.createElement(\"div\", {\n      className: \"manage-jobs-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"numbers-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"number-bubble\",\n      style: pending_num == 0 ? {\n        opacity: \"0\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, pending_num), React.createElement(\"div\", {\n      className: \"number-bubble\",\n      style: scheduled_num == 0 ? {\n        opacity: \"0\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, scheduled_num), React.createElement(\"div\", {\n      className: \"number-bubble\",\n      style: completed_num == 0 ? {\n        opacity: \"0\",\n        marginRight: \"0\"\n      } : {\n        marginRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, completed_num)), React.createElement(\"div\", {\n      className: \"jobs-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Pending\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\"\n      } : {},\n      to: \"/app/dashboard/manage/Pending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Pending\"), React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Scheduled\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\"\n      } : {},\n      to: \"/app/dashboard/manage/Scheduled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Scheduled\"), React.createElement(Link, {\n      className: \"jobs-filter-row\",\n      style: filter == \"Completed\" ? {\n        background: \"#3f6bb4\",\n        color: \"white\",\n        borderRight: \"none\"\n      } : {\n        borderRight: \"none\"\n      },\n      to: \"/app/dashboard/manage/Completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Completed\")), React.createElement(\"div\", {\n      className: \"filter-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Filter by job status with the filters above. Pending status indicates workers haven't accepted your job. Scheduled status indicates the job has workers and will take place in the future. Completed status indicates the job has been completed.\"), React.createElement(\"div\", {\n      className: \"scheduled-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(ChartHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), job_list.length != 0 && React.createElement(\"div\", {\n      className: \"schedule-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, job_list), job_list.length == 0 && React.createElement(\"div\", {\n      className: \"schedule-chart\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingTop: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"You currently have no \", filter, \" jobs.\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  db_get_customer_jobs\n})(withRouter(Manage));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Manage.js"],"names":["React","Component","Fragment","Link","withRouter","connect","db_get_customer_jobs","empty","Navbar","Row","ChartHead","Loading","JobDetail","Manage","constructor","props","onChange","e","setState","target","id","value","onHide","history","push","state","filter","document","body","style","overflow","setDetail","job","loaded","currentJob","match","params","section","componentDidMount","user","filtered","jobs","componentWillReceiveProps","nextProps","render","job_list","status","map","pending_num","length","scheduled_num","completed_num","opacity","marginRight","background","color","borderRight","display","alignItems","paddingTop","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {db_get_customer_jobs} from '../../store/actions/jobs';\nimport empty from 'is-empty';\n\nimport Navbar from '../../components/Nav/Navbar';\nimport Row from '../../components/Graphics/Row';\nimport ChartHead from '../../components/Graphics/ChartHead';\nimport Loading from '../../components/Graphics/Loading';\nimport JobDetail from '../../components/Forms/JobDetail';\n\nclass Manage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tcurrentJob: {},\n\t\t\tfilter: !empty(this.props.match.params) ? this.props.match.params.section : \"Pending\"\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.props.db_get_customer_jobs(this.props.user.id);\n\t\tconst filtered = await this.props.jobs.filter(job => job.id == this.props.match.params.id);\n\t\tif(!empty(filtered)) document.body.style.overflow = \"hidden\";\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tcurrentJob: !empty(filtered) ? filtered[0] : {},\n\t\t\tloaded: true\n\t\t});\n\t}\n\n\tasync componentWillReceiveProps(nextProps) {\n\t\tif(nextProps.match.params != this.props.match.params) {\n\t\t\tconst filtered = await this.props.jobs.filter(job => job.id == nextProps.match.params.id);\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tfilter: nextProps.match.params.section,\n\t\t\t\tid: nextProps.match.params.id,\n\t\t\t\tcurrentJob: !empty(filtered) ? filtered[0] : {}\n\t\t\t})\n\t\t}\n\t}\n\n  onChange = e => {\n    this.setState({ \n    \t[e.target.id]: e.target.value \n    });\n  };\n\n  onHide = () => {\n  \tthis.props.history.push(`/app/dashboard/manage/${this.state.filter}`);\n  \tdocument.body.style.overflow = \"auto\";\n  }\n\n  setDetail = job => {\n  \tthis.props.history.push(`/app/dashboard/manage/${this.state.filter}/${job.id}`);\n  \tdocument.body.style.overflow = \"hidden\";\n  }\n\n\trender() {\n\t\tconst {filter, currentJob} = this.state;\n\n\t\tlet job_list = this.props.jobs.filter(job => job.status == filter || (filter == \"Scheduled\" && job.status == \"In-Progress\")).map(job => \n\t\t\t<Row \n\t\t\t\tkey={job.id}\n\t\t\t\tjob={job}\n\t\t\t\tonClick={this.setDetail}\n\t\t\t/>\n\t\t);\n\n\t\tconst pending_num = this.props.jobs.filter(job => job.status == \"Pending\").length;\n\t\tconst scheduled_num = this.props.jobs.filter(job => job.status == \"Scheduled\" || job.status == \"In-Progress\").length;\n\t\tconst completed_num = this.props.jobs.filter(job => job.status == \"Completed\").length;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar active=\"manage\" />\n\t\t\t\t{!empty(this.state.currentJob) && (<JobDetail hide={this.onHide} job={this.state.currentJob}/>)}\n\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t{this.state.loaded && (<div className=\"manage-container\" style={!empty(currentJob) ? {overflow: \"hidden\"} : {}}>\n\t\t\t\t\t<div className=\"manage-content\">\n\t\t\t\t\t\t<div className=\"manage-header\">\n\t\t\t\t\t\t\t<span className=\"manage-title\">Manage Jobs</span>\n\t\t\t\t\t\t\t<span>View scheduled jobs and review past jobs.</span>\n\t\t\t\t\t\t\t<Link className=\"manage-btn\" to=\"/app/dashboard/book\">Book a Job</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"manage-jobs-body\">\n\t\t\t\t\t\t\t<div className=\"numbers-div\">\n\t\t\t\t\t\t\t\t<div className=\"number-bubble\" style={pending_num == 0 ? {opacity: \"0\"} : {}}>{pending_num}</div>\n\t\t\t\t\t\t\t\t<div className=\"number-bubble\" style={scheduled_num == 0 ? {opacity: \"0\"} : {}}>{scheduled_num}</div>\n\t\t\t\t\t\t\t\t<div className=\"number-bubble\" style={completed_num == 0 ? {opacity: \"0\", marginRight: \"0\"} : {marginRight: \"0\"}}>{completed_num}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"jobs-filter\">\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Pending\" ? {background: \"#3f6bb4\", color: \"white\"} : {}} to='/app/dashboard/manage/Pending'>Pending</Link>\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Scheduled\" ? {background: \"#3f6bb4\", color: \"white\"} : {}} to='/app/dashboard/manage/Scheduled'>Scheduled</Link>\n\t\t\t\t\t\t\t\t<Link className=\"jobs-filter-row\" style={filter == \"Completed\" ? {background: \"#3f6bb4\", color: \"white\", borderRight: \"none\"} : {borderRight: \"none\"}} to='/app/dashboard/manage/Completed'>Completed</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"filter-desc\">\n\t\t\t\t\t\t\t\tFilter by job status with the filters above. Pending status indicates workers haven't \n\t\t\t\t\t\t\t\taccepted your job. Scheduled status indicates the job has workers and will take place in the\n\t\t\t\t\t\t\t\tfuture. Completed status indicates the job has been completed.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"scheduled-container\">\n\t\t\t\t\t\t\t\t<ChartHead/>\n\t\t\t\t\t\t\t\t{job_list.length != 0 && (<div className=\"schedule-chart\">\n\t\t\t\t\t\t\t\t\t{job_list}\n\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t\t{job_list.length == 0 && (<div className=\"schedule-chart\" style={{display: \"flex\", alignItems: \"center\", paddingTop: \"2rem\"}}>\n\t\t\t\t\t\t\t\t\t<span>You currently have no {filter} jobs.</span>\n\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps,{db_get_customer_jobs})(withRouter(Manage));"]},"metadata":{},"sourceType":"module"}