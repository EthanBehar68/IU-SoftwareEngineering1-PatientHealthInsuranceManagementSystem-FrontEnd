{"ast":null,"code":"import { apiCall } from '../../services/api';\nimport { GET_JOBS, REMOVE_JOB, UPDATE_JOB } from '../types';\nimport empty from 'is-empty';\nexport const state_get_jobs = payload => ({\n  type: GET_JOBS,\n  payload\n});\nexport const state_remove_job = payload => ({\n  type: REMOVE_JOB,\n  payload\n});\nexport const state_update_job = payload => ({\n  type: UPDATE_JOB,\n  payload\n});\nexport const db_get_customer_jobs = id => dispatch => {\n  return apiCall('get', `/api/jobs/customers/${id}`).then(function (res) {\n    dispatch(state_get_jobs(res));\n    return {\n      complete: true\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_get_recent_job = id => {\n  return apiCall('get', `/api/jobs/customers/${id}/soon`).then(function (res) {\n    return {\n      complete: true,\n      data: res[0]\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_get_all_paid_jobs = id => {\n  return apiCall('get', `/api/payments/customers/${id}/allpaid`).then(function (res) {\n    return {\n      complete: true,\n      data: res[0]\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_get_coming_job = id => {\n  return apiCall('get', `/api/assignments/worker/${id}/soon`).then(function (res) {\n    return {\n      complete: true,\n      data: res[0]\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_add_job = job => dispatch => {\n  return apiCall('post', `/api/jobs`, job).then(function (res) {\n    return {\n      complete: true\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_cancel_job = job => dispatch => {\n  return apiCall('post', `/api/jobs/${job.id}`, {\n    cancel_fee: job.cancel_fee,\n    stripe_id: job.stripe_id\n  }).then(function (res) {\n    dispatch(state_remove_job(job));\n    return {\n      complete: true\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};\nexport const db_get_loc_jobs = data => dispatch => {\n  return apiCall('post', `/api/jobs/loc`, data).then(function (res) {\n    dispatch(state_get_jobs(res));\n    return {\n      complete: true\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err\n    };\n  });\n};","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/store/actions/jobs.js"],"names":["apiCall","GET_JOBS","REMOVE_JOB","UPDATE_JOB","empty","state_get_jobs","payload","type","state_remove_job","state_update_job","db_get_customer_jobs","id","dispatch","then","res","complete","catch","err","message","db_get_recent_job","data","db_get_all_paid_jobs","db_get_coming_job","db_add_job","job","db_cancel_job","cancel_fee","stripe_id","db_get_loc_jobs"],"mappings":"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","sourcesContent":["import {apiCall} from '../../services/api';\nimport {GET_JOBS, REMOVE_JOB, UPDATE_JOB} from '../types';\nimport empty from 'is-empty';\n\nexport const state_get_jobs = payload => ({\n\ttype: GET_JOBS,\n\tpayload\n});\n\nexport const state_remove_job = payload => ({\n\ttype: REMOVE_JOB,\n\tpayload\n});\n\nexport const state_update_job = payload => ({\n\ttype: UPDATE_JOB,\n\tpayload\n});\n\nexport const db_get_customer_jobs = id => dispatch => {\n\treturn apiCall('get', `/api/jobs/customers/${id}`)\n\t.then(function(res) {\n\t\tdispatch(state_get_jobs(res));\n\t\treturn {complete: true};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_get_recent_job = id => {\n\treturn apiCall('get', `/api/jobs/customers/${id}/soon`)\n\t.then(function(res) {\n\t\treturn {complete: true, data: res[0]};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_get_all_paid_jobs = id => {\n\treturn apiCall('get', `/api/payments/customers/${id}/allpaid`)\n\t.then(function(res) {\n\t\treturn {complete: true, data: res[0]};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_get_coming_job = id => {\n\treturn apiCall('get', `/api/assignments/worker/${id}/soon`)\n\t.then(function(res) {\n\t\treturn {complete: true, data: res[0]};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_add_job = job => dispatch => {\n\treturn apiCall('post', `/api/jobs`, job)\n\t.then(function(res) {\n\t\treturn {complete: true};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_cancel_job = job => dispatch => {\n\treturn apiCall('post', `/api/jobs/${job.id}`, {cancel_fee: job.cancel_fee, stripe_id: job.stripe_id})\n\t.then(function(res) {\n\t\tdispatch(state_remove_job(job));\n\t\treturn {complete: true};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\nexport const db_get_loc_jobs = data => dispatch => {\n\treturn apiCall('post', `/api/jobs/loc`, data)\n\t.then(function(res) {\n\t\tdispatch(state_get_jobs(res));\n\t\treturn {complete: true};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err};\n\t});\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}