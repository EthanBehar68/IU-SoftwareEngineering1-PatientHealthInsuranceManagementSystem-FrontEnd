{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/WorkerCompleteJob.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport moment from 'moment';\nimport getTime from '../../utils/getTime';\nimport getImg from '../../utils/getImg';\nimport empty from 'is-empty';\nimport { WORKER_RATE } from '../../utils/constants';\nimport { db_get_job_assignments } from '../../store/actions/assignments';\nimport { db_add_payment, db_add_cash_payment } from '../../store/actions/payments';\nimport WorkerSelection from '../Graphics/WorkerSelection';\nimport Loading from '../Graphics/Loading';\nimport NumberInput from '../Graphics/NumberInput';\nimport GratuityChoice from '../Graphics/GratuityChoice';\nimport SignatureCanvas from 'react-signature-canvas';\n\nclass WorkerCompleteJob extends Component {\n  constructor(props) {\n    super(props);\n    this.sigPad = {};\n\n    this.onChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          [e.target.id]: e.target.value\n        })\n      }));\n    };\n\n    this.onGratuityChange = amount => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          tip: amount,\n          othertip: 0\n        })\n      }));\n    };\n\n    this.onOtherTipChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          tip: e.target.value,\n          othertip: e.target.value\n        })\n      }));\n    };\n\n    this.onSelect = id => {\n      const workerids = this.state.workerids;\n      this.setState(_objectSpread({}, this.state, {\n        workerids: workerids.includes(id) ? workerids.filter(curr => curr != id) : [...workerids, id]\n      }));\n    };\n\n    this.onSubmit = async () => {\n      this.setState(_objectSpread({}, this.state, {\n        loaded: false\n      }));\n      const _this$state = this.state,\n            data = _this$state.data,\n            workerids = _this$state.workerids,\n            home = _this$state.home,\n            card = _this$state.card;\n      const assignments = this.props.assignments;\n      const resp = card ? await this.props.db_add_payment({\n        hours: data.hours,\n        workers: workerids.length,\n        amount: parseFloat(WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours).toFixed(2))).toFixed(2) * workerids.length * 100,\n        tip: parseFloat(empty(data.tip) ? 0 : parseFloat(data.tip).toFixed(2)).toFixed(2) * 100,\n        signature: empty(this.sigPad) ? null : this.sigPad.getTrimmedCanvas().toDataURL('image/png'),\n        assignments: JSON.stringify(workerids),\n        stripe_id: this.props.job.customer_stripe_id,\n        worker_home: home,\n        type: this.props.job.type,\n        job_id: this.props.job.job_id\n      }) : await this.props.db_add_cash_payment({\n        hours: data.hours,\n        workers: workerids.length,\n        amount: parseFloat(WORKER_RATE * data.hours * workerids.length).toFixed(2) * 100,\n        tip: (parseFloat(data.cash) - (WORKER_RATE * data.hours * workerids.length).toFixed(2)) * 100,\n        signature: null,\n        assignments: JSON.stringify(workerids),\n        stripe_id: this.props.user.stripe_id,\n        worker_home: home,\n        type: this.props.job.type,\n        job_id: this.props.job.job_id\n      });\n      if (resp.complete) this.props.hide();else this.setState(_objectSpread({}, this.state, {\n        loaded: true\n      }));\n    };\n\n    this.confirm = () => {\n      confirmAlert({\n        title: 'Before completion...',\n        message: 'Are you sure all this info is correct?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.onSubmit()\n        }, {\n          label: 'No',\n          onClick: () => {}\n        }]\n      });\n    };\n\n    this.state = {\n      loaded: false,\n      data: {\n        hours: this.props.job.hours,\n        tip: 0,\n        signature: '',\n        othertip: 0,\n        cash: 0\n      },\n      workerids: [],\n      home: true,\n      card: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_job_assignments(this.props.job.job_id);\n    let workerids = [];\n\n    for (let i = 0; i < this.props.assignments.length; i++) {\n      workerids.push(this.props.assignments[i].assignment_id);\n    }\n\n    this.setState(_objectSpread({}, this.state, {\n      loaded: true,\n      workerids: workerids\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          job = _this$props.job,\n          assignments = _this$props.assignments;\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          workerids = _this$state2.workerids,\n          home = _this$state2.home,\n          card = _this$state2.card;\n    let workers = [];\n\n    for (let i = 0; i < assignments.length; i++) {\n      workers.push(React.createElement(WorkerSelection, {\n        key: assignments[i],\n        assignment: assignments[i],\n        onClick: this.onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"job-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"overlay-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.props.hide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"img\", {\n      className: \"detail-header-img\",\n      src: getImg(job.type),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"detail-title-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"detail-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, job.type), React.createElement(\"span\", {\n      className: \"status-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Status: \", React.createElement(\"span\", {\n      style: {\n        color: job.status == \"Pending\" ? \"red\" : \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, job.status))), React.createElement(\"div\", {\n      className: \"overlay-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"worker-present-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"customer-home-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"complete-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Customer Home: \"), React.createElement(\"button\", {\n      className: home ? \"yes-home\" : \"no-home\",\n      onClick: () => {\n        this.setState(_objectSpread({}, this.state, {\n          home: !home\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, home ? \"YES\" : \"NO\")), home && React.createElement(\"div\", {\n      className: \"complete-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Payment: \"), React.createElement(\"div\", {\n      className: \"cash-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"yes-home\",\n      style: !card ? {\n        backgroundColor: \"white\",\n        marginRight: \"0.5rem\"\n      } : {\n        marginRight: \"0.5rem\"\n      },\n      onClick: () => {\n        this.setState(_objectSpread({}, this.state, {\n          card: true\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"CARD\"), React.createElement(\"button\", {\n      className: \"yes-home\",\n      style: card ? {\n        backgroundColor: \"white\"\n      } : {},\n      onClick: () => {\n        this.setState(_objectSpread({}, this.state, {\n          card: false\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"CASH\")))), React.createElement(\"div\", {\n      className: \"complete-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"completion-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Hours Worked: \"), React.createElement(\"input\", {\n      min: \"0\",\n      type: \"number\",\n      className: \"text-field complete\",\n      id: \"hours\",\n      onChange: this.onChange,\n      value: data.hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"completion-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Workers Present: \"), React.createElement(\"div\", {\n      className: \"worker-selection-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, workers)), React.createElement(\"div\", {\n      className: \"invoice-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invoice-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Flat worker rate\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Hours worked\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Number of workers\"), React.createElement(\"hr\", {\n      className: \"invoice-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Subtotal\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Gratuity\"), React.createElement(\"hr\", {\n      className: \"invoice-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(\"div\", {\n      className: \"invoice-column right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"$\", WORKER_RATE.toFixed(2)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, empty(data.hours) ? 0 : parseFloat(data.hours)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, workerids.length), React.createElement(\"hr\", {\n      className: \"invoice-hr right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"$\", (WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours)) * workerids.length).toFixed(2))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"$\", empty(data.tip) ? 0 : parseFloat(data.tip).toFixed(2)), React.createElement(\"hr\", {\n      className: \"invoice-hr right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"$\", (parseFloat(WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours)) * workerids.length) + parseFloat(empty(data.tip) ? 0 : parseFloat(data.tip).toFixed(2))).toFixed(2)))))), home && card && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gratuity-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"completion-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Gratuity (split \", workerids.length, \" way(s)): \", React.createElement(\"span\", {\n      style: {\n        fontWeight: \"500\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"$\", empty(data.othertip) ? empty(data.tip) ? Number(0).toFixed(2) : Number(data.tip).toFixed(2) : Number(data.othertip).toFixed(2))), React.createElement(\"div\", {\n      className: \"gratuity-choices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"$0/worker:\"), React.createElement(GratuityChoice, {\n      amount: 0 * workerids.length,\n      onClick: this.onGratuityChange,\n      selected: data.tip == 0 * workerids.length && empty(data.othertip),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"$3/worker:\"), React.createElement(GratuityChoice, {\n      amount: 3 * workerids.length,\n      onClick: this.onGratuityChange,\n      selected: data.tip == 3 * workerids.length && empty(data.othertip),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"$5/worker:\"), React.createElement(GratuityChoice, {\n      amount: 5 * workerids.length,\n      onClick: this.onGratuityChange,\n      selected: data.tip == 5 * workerids.length && empty(data.othertip),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"$10/worker:\"), React.createElement(GratuityChoice, {\n      amount: 10 * workerids.length,\n      onClick: this.onGratuityChange,\n      selected: data.tip == 10 * workerids.length && empty(data.othertip),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Other:\"), React.createElement(NumberInput, {\n      onChange: this.onOtherTipChange,\n      id: \"othertip\",\n      value: data.othertip,\n      color: \"rgba(188,190,192,0.5)\",\n      inputStyle: {\n        fontSize: \"1.5rem\",\n        height: \"2.3rem\"\n      },\n      style: empty(data.othertip) ? {\n        width: '100%',\n        fontSize: \"1.5rem !important\"\n      } : {\n        background: \"#3f6bb4\",\n        color: \"white\",\n        width: '100%',\n        fontSize: \"1.5rem !important\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })))), React.createElement(\"span\", {\n      className: \"completion-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Customer Signature: \"), React.createElement(SignatureCanvas, {\n      penColor: \"black\",\n      canvasProps: {\n        className: 'sigCanvas'\n      },\n      ref: ref => {\n        this.sigPad = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"0.5rem\",\n        fontSize: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"By signing, you authorize Joe's Odd Jobs to charge your credit card: \\u2022\\u2022\\u2022\\u2022 \\u2022\\u2022\\u2022\\u2022 \\u2022\\u2022\\u2022\\u2022 \", job.last4, \".\")), home && !card && React.createElement(\"div\", {\n      className: \"cash-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gratuity-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Cash Amount:\"), React.createElement(NumberInput, {\n      onChange: this.onChange,\n      id: \"cash\",\n      value: data.cash,\n      color: \"rgba(188,190,192,0.5)\",\n      inputStyle: {\n        fontSize: \"1.5rem\",\n        height: \"2.3rem\"\n      },\n      style: {\n        width: '100%',\n        fontSize: \"1.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"sign-in-btn\",\n      id: \"submitBtn\",\n      disabled: workerids.length == 0 || !this.state.loaded,\n      onClick: !home || !card ? this.confirm : this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, home ? \"FINISH JOB\" : \"SEND INVOICE & FINISH JOB\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  assignments: state.jobassignments\n});\n\nexport default connect(mapStateToProps, {\n  db_get_job_assignments,\n  db_add_payment,\n  db_add_cash_payment\n})(withRouter(WorkerCompleteJob));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/WorkerCompleteJob.js"],"names":["React","Component","Fragment","Link","withRouter","connect","confirmAlert","moment","getTime","getImg","empty","WORKER_RATE","db_get_job_assignments","db_add_payment","db_add_cash_payment","WorkerSelection","Loading","NumberInput","GratuityChoice","SignatureCanvas","WorkerCompleteJob","constructor","props","sigPad","onChange","e","setState","state","data","target","id","value","onGratuityChange","amount","tip","othertip","onOtherTipChange","onSelect","workerids","includes","filter","curr","onSubmit","loaded","home","card","assignments","resp","hours","workers","length","parseFloat","toFixed","signature","getTrimmedCanvas","toDataURL","JSON","stringify","stripe_id","job","customer_stripe_id","worker_home","type","job_id","cash","user","complete","hide","confirm","title","message","buttons","label","onClick","componentDidMount","i","push","assignment_id","render","color","status","marginRight","backgroundColor","fontWeight","Number","width","fontSize","height","background","className","ref","marginTop","last4","mapStateToProps","auth","jobassignments"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {confirmAlert} from 'react-confirm-alert';\nimport moment from 'moment';\nimport getTime from '../../utils/getTime';\nimport getImg from '../../utils/getImg';\nimport empty from 'is-empty';\nimport {WORKER_RATE} from '../../utils/constants';\nimport {db_get_job_assignments} from '../../store/actions/assignments';\nimport {db_add_payment, db_add_cash_payment} from '../../store/actions/payments';\n\nimport WorkerSelection from '../Graphics/WorkerSelection';\nimport Loading from '../Graphics/Loading';\nimport NumberInput from '../Graphics/NumberInput';\nimport GratuityChoice from '../Graphics/GratuityChoice';\nimport SignatureCanvas from 'react-signature-canvas';\n\nclass WorkerCompleteJob extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tdata: {\n\t\t\t\thours: this.props.job.hours,\n\t\t\t\ttip: 0,\n\t\t\t\tsignature: '',\n\t\t\t\tothertip: 0,\n\t\t\t\tcash: 0\n\t\t\t},\n\t\t\tworkerids: [],\n\t\t\thome: true,\n\t\t\tcard: true\n\t\t};\n\t}\n\n\tsigPad = {}\n\n  async componentDidMount() {\n  \tawait this.props.db_get_job_assignments(this.props.job.job_id);\n  \tlet workerids = [];\n  \tfor(let i = 0; i < this.props.assignments.length; i++) {\n\t\t\tworkerids.push(this.props.assignments[i].assignment_id);\n\t\t}\n  \tthis.setState({\n  \t\t...this.state,\n  \t\tloaded: true,\n  \t\tworkerids: workerids\n  \t});\n  }\n\n  onChange = e => {\n    this.setState({\n    \t...this.state,\n    \tdata: {\n    \t\t...this.state.data,\n    \t\t[e.target.id]: e.target.value \n    \t} \n    });\n  };\n\n  onGratuityChange = amount => {\n  \tthis.setState({\n  \t\t...this.state,\n  \t\tdata: {\n  \t\t\t...this.state.data,\n  \t\t\ttip: amount,\n  \t\t\tothertip: 0\n  \t\t}\n  \t});\n  }\n\n  onOtherTipChange = e => {\n  \tthis.setState({\n  \t\t...this.state,\n  \t\tdata: {\n  \t\t\t...this.state.data,\n  \t\t\ttip: e.target.value,\n  \t\t\tothertip: e.target.value\n  \t\t}\n  \t});\n  }\n\n  onSelect = id => {\n  \tconst {workerids} = this.state;\n  \tthis.setState({\n  \t\t...this.state,\n    \tworkerids: workerids.includes(id) ? workerids.filter(curr => curr != id) : [...workerids, id]\n    });\n  }\n\n  onSubmit = async () => {\n  \tthis.setState({...this.state, loaded: false});\n  \tconst {data, workerids, home, card} = this.state;\n  \tconst {assignments} = this.props;\n  \tconst resp = card ? await this.props.db_add_payment({\n  \t\thours: data.hours,\n  \t\tworkers: workerids.length,\n  \t\tamount: parseFloat((WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours).toFixed(2)))).toFixed(2) * workerids.length * 100,\n  \t\ttip: parseFloat(empty(data.tip) ? 0 : (parseFloat(data.tip)).toFixed(2)).toFixed(2) * 100,\n  \t\tsignature: empty(this.sigPad) ? null : this.sigPad.getTrimmedCanvas().toDataURL('image/png'),\n  \t\tassignments: JSON.stringify(workerids),\n  \t\tstripe_id: this.props.job.customer_stripe_id,\n  \t\tworker_home: home,\n  \t\ttype: this.props.job.type,\n  \t\tjob_id: this.props.job.job_id\n  \t}) : await this.props.db_add_cash_payment({\n  \t\thours: data.hours,\n  \t\tworkers: workerids.length,\n  \t\tamount: parseFloat(WORKER_RATE * data.hours * workerids.length).toFixed(2) * 100,\n  \t\ttip: (parseFloat(data.cash) - (WORKER_RATE * data.hours * workerids.length).toFixed(2)) * 100,\n  \t\tsignature: null,\n  \t\tassignments: JSON.stringify(workerids),\n  \t\tstripe_id: this.props.user.stripe_id,\n  \t\tworker_home: home,\n  \t\ttype: this.props.job.type,\n  \t\tjob_id: this.props.job.job_id\n  \t});\n  \tif(resp.complete) this.props.hide();\n  \t\telse this.setState({...this.state, loaded: true})\n  }\n\n\tconfirm = () => {\n  \tconfirmAlert({\n      title: 'Before completion...',\n      message: 'Are you sure all this info is correct?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.onSubmit()\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  }\n\n\trender() {\n\t\tconst {job, assignments} = this.props;\n\t\tconst {data, workerids, home, card} = this.state;\n\t\tlet workers = [];\n\t\tfor(let i = 0; i < assignments.length; i++) {\n\t\t\tworkers.push(<WorkerSelection key={assignments[i]} assignment={assignments[i]} onClick={this.onSelect}/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"job-overlay\">\n\t\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t\t{this.state.loaded && (<div className=\"overlay-box\">\n\t\t\t\t\t\t<span className=\"close\" onClick={this.props.hide}>X</span>\n\t\t\t\t\t\t<img className=\"detail-header-img\" src={getImg(job.type)} alt=\"\"/>\n\t\t\t\t\t\t<div className=\"detail-title-div\">\n\t\t\t\t\t\t\t<span className=\"detail-title\">{job.type}</span>\n\t\t\t\t\t\t\t<span className=\"status-title\">Status: <span style={{color: job.status == \"Pending\" ? \"red\" : \"green\"}}>{job.status}</span></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"overlay-content\">\n\t\t\t\t\t\t\t<div className=\"icon-section\">\n\t\t\t\t\t\t\t\t<div className=\"worker-present-div\">\n\t\t\t\t\t\t\t\t\t<div className=\"customer-home-div\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"complete-row\">\n\t\t\t\t\t\t\t\t\t\t\t<span style={{marginRight: \"1rem\"}}>Customer Home: </span>\n\t\t\t\t\t\t\t\t\t\t\t<button className={home ? \"yes-home\" : \"no-home\"} onClick={() => {this.setState({...this.state, home: !home})}}>{home ? \"YES\" : \"NO\"}</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{home && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"complete-row\">\n\t\t\t\t\t\t\t\t\t\t\t<span style={{marginRight: \"1rem\"}}>Payment: </span>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"cash-card\">\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"yes-home\" style={!card ? {backgroundColor: \"white\", marginRight: \"0.5rem\"} : {marginRight: \"0.5rem\"}} onClick={() => {this.setState({...this.state, card: true})}}>CARD</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"yes-home\" style={card ? {backgroundColor: \"white\"} : {}} onClick={() => {this.setState({...this.state, card: false})}}>CASH</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"complete-row\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"completion-header\">Hours Worked: </span>\n\t\t\t\t\t\t\t\t\t\t<input min=\"0\" type=\"number\" className=\"text-field complete\" id=\"hours\" onChange={this.onChange} value={data.hours}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span className=\"completion-header\">Workers Present: </span>\n\t\t\t\t\t\t\t\t\t<div className=\"worker-selection-div\">\n\t\t\t\t\t\t\t\t\t\t{workers}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"invoice-section\">\n\t\t\t\t\t\t\t\t\t<div className=\"invoice-column\">\n\t\t\t\t\t\t\t\t\t\t<span>Flat worker rate</span>\n\t\t\t\t\t\t\t\t\t\t<span>Hours worked</span>\n\t\t\t\t\t\t\t\t\t\t<span>Number of workers</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>Subtotal</strong></span>\n\t\t\t\t\t\t\t\t\t\t<span>Gratuity</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>Total</strong></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"invoice-column right\">\n\t\t\t\t\t\t\t\t\t\t<span>${(WORKER_RATE).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{empty(data.hours) ? 0 : parseFloat(data.hours)}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{workerids.length}</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr right\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>${(WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours)) * workerids.length).toFixed(2)}</strong></span>\n\t\t\t\t\t\t\t\t\t\t<span>${empty(data.tip) ? 0 : (parseFloat(data.tip)).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr right\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>${(parseFloat((WORKER_RATE * (empty(data.hours) ? 0 : parseFloat(data.hours))) * workerids.length) + parseFloat(empty(data.tip) ? 0 : (parseFloat(data.tip)).toFixed(2))).toFixed(2)}</strong></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{home && card && (<Fragment><div className=\"gratuity-div\">\n\t\t\t\t\t\t\t\t<span className=\"completion-header\">Gratuity (split {workerids.length} way(s)): <span style={{fontWeight: \"500\"}}>${empty(data.othertip) ? empty(data.tip) ? Number(0).toFixed(2) : Number((data.tip)).toFixed(2) : Number((data.othertip)).toFixed(2)}</span></span>\n\t\t\t\t\t\t\t\t<div className=\"gratuity-choices\">\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\" style={{width: \"100%\"}}>\n\t\t\t\t\t\t\t\t\t\t<span>$0/worker:</span>\n\t\t\t\t\t\t\t\t\t\t<GratuityChoice amount={0 * workerids.length} onClick={this.onGratuityChange} selected={data.tip == 0 * workerids.length && empty(data.othertip)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\">\n\t\t\t\t\t\t\t\t\t\t<span>$3/worker:</span>\n\t\t\t\t\t\t\t\t\t\t<GratuityChoice amount={3 * workerids.length} onClick={this.onGratuityChange} selected={data.tip == 3 * workerids.length && empty(data.othertip)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\">\n\t\t\t\t\t\t\t\t\t\t<span>$5/worker:</span>\n\t\t\t\t\t\t\t\t\t\t<GratuityChoice amount={5 * workerids.length} onClick={this.onGratuityChange} selected={data.tip == 5 * workerids.length && empty(data.othertip)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\">\n\t\t\t\t\t\t\t\t\t\t<span>$10/worker:</span>\n\t\t\t\t\t\t\t\t\t\t<GratuityChoice amount={10 * workerids.length} onClick={this.onGratuityChange} selected={data.tip == 10 * workerids.length && empty(data.othertip)}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\">\n\t\t\t\t\t\t\t\t\t\t<span>Other:</span>\n\t\t\t\t\t\t\t\t\t\t<NumberInput onChange={this.onOtherTipChange} id=\"othertip\" value={data.othertip} color=\"rgba(188,190,192,0.5)\" inputStyle={{fontSize: \"1.5rem\", height: \"2.3rem\"}} style={empty(data.othertip) ? {width: '100%', fontSize: \"1.5rem !important\"} : {background: \"#3f6bb4\", color: \"white\", width: '100%', fontSize: \"1.5rem !important\"}}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"completion-header\">Customer Signature: </span>\n\t\t\t\t\t\t\t<SignatureCanvas penColor='black' canvasProps={{className: 'sigCanvas'}} ref={(ref) => { this.sigPad = ref }}/>\n\t\t\t\t\t\t\t<p style={{marginTop: \"0.5rem\", fontSize: \"1rem\"}}>By signing, you authorize Joe's Odd Jobs to charge your credit card: •••• •••• •••• {job.last4}.</p></Fragment>)}\n\t\t\t\t\t\t\t{home && !card && (\n\t\t\t\t\t\t\t\t<div className=\"cash-div\">\n\t\t\t\t\t\t\t\t\t<div className=\"gratuity-choice\">\n\t\t\t\t\t\t\t\t\t\t<span>Cash Amount:</span>\n\t\t\t\t\t\t\t\t\t\t<NumberInput onChange={this.onChange} id=\"cash\" value={data.cash} color=\"rgba(188,190,192,0.5)\" inputStyle={{fontSize: \"1.5rem\", height: \"2.3rem\"}} style={{width: '100%', fontSize: \"1.5rem\"}}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t<button className=\"sign-in-btn\" id=\"submitBtn\" disabled={workerids.length == 0 || !this.state.loaded} onClick={!home || !card ? this.confirm : this.onSubmit}>{home ? \"FINISH JOB\" : \"SEND INVOICE & FINISH JOB\"}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tuser: state.auth.user,\n\tassignments: state.jobassignments\n});\n\nexport default connect(mapStateToProps,{db_get_job_assignments, db_add_payment, db_add_cash_payment})(withRouter(WorkerCompleteJob));\n\n"]},"metadata":{},"sourceType":"module"}