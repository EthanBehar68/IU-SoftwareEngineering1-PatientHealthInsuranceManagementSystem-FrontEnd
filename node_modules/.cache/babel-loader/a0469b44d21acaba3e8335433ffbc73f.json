{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { state_get_products, db_get_products } from \"../../store/actions/products\";\nimport sumItems from '../../utils/sumItems';\nimport moment from 'moment';\nimport empty from 'is-empty';\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ProductCard from '../../components/Forms/ProductCard';\nimport test from '../../images/dadshort.png';\nimport test2 from '../../images/spottedsweatshirt.png';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toCart = products => {\n      this.setState(_objectSpread({}, this.state, {\n        items: this.state.items + sumItems(products)\n      }));\n      const existing = empty(localStorage.getItem(\"products\")) ? [] : JSON.parse(localStorage.getItem(\"products\"));\n      localStorage.setItem(\"products\", JSON.stringify([...existing, ...products]));\n    };\n\n    this.toCheckout = () => {\n      this.props.state_get_products(this.state.products);\n    };\n\n    this.state = {\n      loaded: false,\n      items: sumItems(this.props.products)\n    };\n    this.toCart = this.toCart.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_products();\n    const products = empty(this.props.products) ? empty(localStorage.getItem(\"products\")) ? [] : JSON.parse(localStorage.getItem(\"products\")) : this.props.products;\n    this.setState({\n      loaded: true,\n      items: sumItems(products)\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      active: \"home\",\n      items: this.state.items,\n      toCheckout: this.toCheckout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ProductCard, {\n      photo: test,\n      product: \"Dad's Weekend\",\n      price: 25.00,\n      toCart: this.toCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ProductCard, {\n      photo: test2,\n      product: \"Spotted Cow\",\n      price: 42.00,\n      toCart: this.toCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nexport default connect(mapStateToProps, {\n  state_get_products,\n  db_get_products\n})(withRouter(Products));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Products.js"],"names":["React","Component","Fragment","Link","withRouter","connect","state_get_products","db_get_products","sumItems","moment","empty","Navbar","Loading","ProductCard","test","test2","Products","constructor","props","toCart","products","setState","state","items","existing","localStorage","getItem","JSON","parse","setItem","stringify","toCheckout","loaded","bind","componentDidMount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {state_get_products, db_get_products} from \"../../store/actions/products\";\nimport sumItems from '../../utils/sumItems';\nimport moment from 'moment';\nimport empty from 'is-empty';\n\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ProductCard from '../../components/Forms/ProductCard';\n\nimport test from '../../images/dadshort.png';\nimport test2 from '../../images/spottedsweatshirt.png';\n\nclass Products extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\titems: sumItems(this.props.products)\n\t\t};\n\t\tthis.toCart = this.toCart.bind(this);\n\t}\n\n  async componentDidMount() {\n  \tawait this.props.db_get_products();\n  \tconst products = empty(this.props.products) ? empty(localStorage.getItem(\"products\")) ? [] : JSON.parse(localStorage.getItem(\"products\")) : this.props.products;\n  \tthis.setState({\n  \t\tloaded: true,\n  \t\titems: sumItems(products)\n  \t});\n  }\n\n  toCart = products => {\n  \tthis.setState({\n  \t\t...this.state,\n  \t\titems: this.state.items + sumItems(products)\n  \t});\n  \tconst existing = empty(localStorage.getItem(\"products\")) ? [] : JSON.parse(localStorage.getItem(\"products\"));\n  \tlocalStorage.setItem(\"products\", JSON.stringify([...existing, ...products]));\n  }\n\n  toCheckout = () => {\n  \tthis.props.state_get_products(this.state.products);\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar active=\"home\" items={this.state.items} toCheckout={this.toCheckout}/>\n\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t{this.state.loaded && (<div className=\"dashboard-container\">\n\t\t\t\t\t<div className=\"dashboard-box\">\n\t\t\t\t\t\t<ProductCard photo={test} product=\"Dad's Weekend\" price={25.00} toCart={this.toCart}/>\n\t\t\t\t\t\t<ProductCard photo={test2} product=\"Spotted Cow\" price={42.00} toCart={this.toCart}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nexport default connect(mapStateToProps,{state_get_products, db_get_products})(withRouter(Products));\n\n\n"]},"metadata":{},"sourceType":"module"}