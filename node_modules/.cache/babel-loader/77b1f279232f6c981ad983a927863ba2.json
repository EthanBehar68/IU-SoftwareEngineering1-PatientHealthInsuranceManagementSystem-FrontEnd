{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Admin/AdminSignIn.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../store/actions/adminauth\";\nimport { setFooter } from \"../../store/actions/footer\";\nimport empty from 'is-empty';\nimport validator from 'validator';\nimport adminPic from '../../images/findimg.png';\nimport AdminNavbar from '../../components/Nav/AdminNavbar';\nimport ErrorBanner from '../../components/Graphics/ErrorBanner';\nimport Loading from '../../components/Graphics/Loading';\n\nclass AdminSignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          [e.target.id]: e.target.value\n        })\n      }));\n    };\n\n    this.onLogin = async e => {\n      e.preventDefault();\n      this.setState(_objectSpread({}, this.state, {\n        loaded: false\n      }));\n      const userData = {\n        email: this.state.data.email,\n        password: this.state.data.password\n      };\n      const resp = await this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n\n      if (!resp.complete) {\n        this.setState(_objectSpread({}, this.state, {\n          error: resp.message,\n          loaded: true\n        }));\n      }\n    };\n\n    this.state = {\n      data: {\n        first: \"\",\n        last: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        password: \"\",\n        password2: \"\"\n      },\n      error: \"\",\n      loaded: true\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (nextProps.auth.user.db == \"customers\") {\n        this.props.setFooter(\"customers\");\n        this.props.history.push(\"/app/dashboard\");\n      } else if (nextProps.auth.user.db == \"workers\") {\n        this.props.setFooter(\"workers\");\n        this.props.history.push(\"/worker/dashboard\");\n      } else {\n        this.props.setFooter(\"admin\");\n        this.props.history.push(\"/admin/dashboard\");\n      }\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.db == \"customers\") {\n        this.props.setFooter(\"customers\");\n        this.props.history.push(\"/app/dashboard\");\n      } else if (this.props.auth.user.db == \"workers\") {\n        this.props.setFooter(\"workers\");\n        this.props.history.push(\"/worker/dashboard\");\n      } else {\n        this.props.setFooter(\"admin\");\n        this.props.history.push(\"/admin/dashboard\");\n      }\n    } else {\n      this.props.setFooter(\"admin\");\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          validation = _this$state.validation,\n          empties = _this$state.empties;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(AdminNavbar, {\n      signin: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), !empty(this.state.error) && React.createElement(ErrorBanner, {\n      error: this.state.error,\n      onHide: () => this.setState(_objectSpread({}, this.state, {\n        error: ''\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"sign-in-container admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sign-in-box-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"sign-in-box worker\",\n      onSubmit: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sign-in-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Admin Sign In\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-field worker\",\n      id: \"email\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"text-field worker\",\n      id: \"password\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"sign-in-btn admin\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sign In\")), React.createElement(\"img\", {\n      className: \"signin-pic\",\n      src: adminPic,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser,\n  setFooter\n})(withRouter(AdminSignIn));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Admin/AdminSignIn.js"],"names":["React","Component","Fragment","Link","withRouter","connect","loginUser","setFooter","empty","validator","adminPic","AdminNavbar","ErrorBanner","Loading","AdminSignIn","constructor","props","onChange","e","setState","state","data","target","id","value","onLogin","preventDefault","loaded","userData","email","password","resp","history","complete","error","message","first","last","phone","address","city","zip","password2","componentWillReceiveProps","nextProps","auth","isAuthenticated","user","db","push","componentDidMount","render","validation","empties","mapStateToProps","errors"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {loginUser} from \"../../store/actions/adminauth\";\nimport {setFooter} from \"../../store/actions/footer\";\nimport empty from 'is-empty';\nimport validator from 'validator';\n\nimport adminPic from '../../images/findimg.png';\n\nimport AdminNavbar from '../../components/Nav/AdminNavbar';\nimport ErrorBanner from '../../components/Graphics/ErrorBanner';\nimport Loading from '../../components/Graphics/Loading';\n\nclass AdminSignIn extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tfirst: \"\",\n\t      last: \"\",\n\t      email: \"\",\n\t      phone: \"\",\n\t      address: \"\",\n\t      city: \"\",\n\t      state: \"\",\n\t      zip: \"\",\n\t      password: \"\",\n\t      password2: \"\"\n\t\t\t},\n      error: \"\",\n      loaded: true\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.auth.isAuthenticated) {\n\t\t\tif (nextProps.auth.user.db == \"customers\") {\n\t\t\t\tthis.props.setFooter(\"customers\");\n\t\t\t\tthis.props.history.push(\"/app/dashboard\");\n\t\t\t} else if (nextProps.auth.user.db == \"workers\") {\n\t\t\t\tthis.props.setFooter(\"workers\");\n\t\t\t\tthis.props.history.push(\"/worker/dashboard\");\n\t\t\t} else {\n\t\t\t\tthis.props.setFooter(\"admin\");\n\t\t\t\tthis.props.history.push(\"/admin/dashboard\");\n\t\t\t}\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n    \tif (this.props.auth.user.db == \"customers\") {\n    \t\tthis.props.setFooter(\"customers\");\n\t\t\t\tthis.props.history.push(\"/app/dashboard\");\n\t\t\t} else if (this.props.auth.user.db == \"workers\") {\n\t\t\t\tthis.props.setFooter(\"workers\");\n\t\t\t\tthis.props.history.push(\"/worker/dashboard\");\n\t\t\t} else {\n\t\t\t\tthis.props.setFooter(\"admin\");\n\t\t\t\tthis.props.history.push(\"/admin/dashboard\");\n\t\t\t}\n    } else {\n    \tthis.props.setFooter(\"admin\");\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n    \t...this.state,\n    \tdata: {\n    \t\t...this.state.data,\n    \t\t[e.target.id]: e.target.value \n    \t} \n    });\n  };\n\n  onLogin = async e => {\n    e.preventDefault();\n    this.setState({\n    \t...this.state,\n    \tloaded: false\n    });\n\t\tconst userData = {\n      email: this.state.data.email,\n      password: this.state.data.password\n    };\n\t\tconst resp = await this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n\t\tif(!resp.complete) {\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\terror: resp.message,\n\t\t\t\tloaded: true\n\t\t\t});\n\t\t}\n  };\n\n\trender() {\n\t\tconst {data, validation, empties} = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<AdminNavbar signin/>\n\t\t\t\t{!empty(this.state.error) && (<ErrorBanner error={this.state.error} onHide={() => this.setState({...this.state, error: ''})}/>)}\n\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t{this.state.loaded && (<div className=\"sign-in-container admin\">\n\t\t\t\t\t<div className=\"sign-in-box-pic\">\n\t\t\t\t\t\t<form className=\"sign-in-box worker\" onSubmit={this.onLogin}>\n\t\t\t\t\t\t\t<span className=\"sign-in-title\">Admin Sign In</span>\n\t\t\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t\t\t<span className=\"field-label\">Email</span>\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"text-field worker\" id=\"email\" onChange={this.onChange}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t\t\t<span className=\"field-label\">Password</span>\n\t\t\t\t\t\t\t\t<input type=\"password\" className=\"text-field worker\" id=\"password\" onChange={this.onChange}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"sign-in-btn admin\" type=\"submit\">Sign In</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<img className=\"signin-pic\" src={adminPic} alt=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps,{loginUser, setFooter})(withRouter(AdminSignIn));\n"]},"metadata":{},"sourceType":"module"}