{"ast":null,"code":"import _objectWithoutProperties from\"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{connect}from\"react-redux\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,auth=_ref.auth,portal=_ref.portal,rest=_objectWithoutProperties(_ref,[\"component\",\"auth\",\"portal\"]);return React.createElement(Route,Object.assign({},rest,{render:function render(props){return auth.isAuthenticated===true&&portal==auth.user.db?React.createElement(Component,props):React.createElement(Redirect,{to:portal==\"workers\"?\"/worker\":\"/app\"});}}));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/components/Nav/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","Component","component","auth","portal","rest","props","isAuthenticated","user","db","mapStateToProps","state"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcC,CAAAA,SAAd,MAAGC,SAAH,CAAyBC,IAAzB,MAAyBA,IAAzB,CAA+BC,MAA/B,MAA+BA,MAA/B,CAA0CC,IAA1C,oEACnB,qBAAC,KAAD,kBACMA,IADN,EAEE,MAAM,CAAE,gBAAAC,KAAK,QACXH,CAAAA,IAAI,CAACI,eAAL,GAAyB,IAAzB,EAAiCH,MAAM,EAAID,IAAI,CAACK,IAAL,CAAUC,EAArD,CACE,oBAAC,SAAD,CAAeH,KAAf,CADF,CAGE,oBAAC,QAAD,EAAU,EAAE,CAAEF,MAAM,EAAI,SAAV,CAAsB,SAAtB,CAAkC,MAAhD,EAJS,EAFf,GADmB,EAArB,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCR,IAAI,CAAEQ,KAAK,CAACR,IADoB,CAAL,EAA7B,CAGA,cAAeJ,CAAAA,OAAO,CAACW,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, portal, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true && portal == auth.user.db ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={portal == \"workers\" ? \"/worker\" : \"/app\"} />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}