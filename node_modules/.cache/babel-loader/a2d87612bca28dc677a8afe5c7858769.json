{"ast":null,"code":"var _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/WorkerJobDetail.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport moment from 'moment';\nimport empty from 'is-empty';\nimport getTime from '../../utils/getTime';\nimport getImg from '../../utils/getImg';\nimport locmark from '../../images/locmark.png';\nimport { db_add_assignment, db_get_job_assignments, db_remove_assignment } from '../../store/actions/assignments';\nimport { db_get_payment } from '../../store/actions/payments';\nimport Calendar from '../Graphics/Calendar';\nimport Clock from '../Graphics/Clock';\nimport WorkerCard from '../Graphics/WorkerCard';\nimport Loading from '../Graphics/Loading';\n\nclass WorkerJobDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cancelJob = async () => {\n      const resp = await this.props.db_remove_assignment({\n        id: this.props.job.assignment_id,\n        stripe_id: this.props.user.stripe_id\n      });\n      if (resp.complete) this.props.hide();\n    };\n\n    this.acceptJob = async () => {\n      const resp = await this.props.db_add_assignment({\n        worker_id: this.props.user.id,\n        job_id: this.props.job.id,\n        workers: this.props.job.workers\n      });\n      if (resp.complete) this.props.history.push('/worker/dashboard/manage');\n    };\n\n    this.confirmAccept = () => {\n      confirmAlert({\n        title: 'Before you accept...',\n        message: 'Are you sure you will be able to make it to this job? Once you book a job, if you cancel, you will be charged a $5 cancellation fee.',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.acceptJob()\n        }, {\n          label: 'No',\n          onClick: () => {}\n        }]\n      });\n    };\n\n    this.confirmCancel = () => {\n      confirmAlert({\n        title: 'Confirm Job Cancellation',\n        message: 'Are you sure you want to cancel? You will be charged a $5 cancellation fee.',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.cancelJob()\n        }, {\n          label: 'No',\n          onClick: () => {}\n        }]\n      });\n    };\n\n    this.state = {\n      loaded: false,\n      payment: {}\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_job_assignments(this.props.scheduled ? this.props.job.job_id : this.props.job.id);\n    let payment = {};\n\n    if (this.props.job.status == \"Completed\") {\n      payment = await db_get_payment(this.props.job.job_id);\n    }\n\n    this.setState({\n      loaded: true,\n      payment: payment.complete ? payment.payment : {}\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          job = _this$props.job,\n          assignments = _this$props.assignments;\n    const payment = this.state.payment;\n    let workers = [];\n\n    for (let i = 0; i < assignments.length; i++) {\n      workers.push(React.createElement(WorkerCard, {\n        key: i,\n        worker: assignments[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n\n    for (let i = assignments.length; i < job.workers; i++) {\n      workers.push(React.createElement(WorkerCard, {\n        key: i,\n        def: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"job-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"overlay-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.props.hide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"img\", {\n      className: \"detail-header-img\",\n      src: getImg(job.type),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"detail-title-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"detail-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, job.type), React.createElement(\"span\", {\n      className: \"status-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Status: \", React.createElement(\"span\", {\n      style: {\n        color: job.status == \"Pending\" ? \"red\" : \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, job.status))), React.createElement(\"div\", {\n      className: \"overlay-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, job.status == \"Completed\" && React.createElement(\"div\", {\n      className: \"icon-section\",\n      style: {\n        borderBottom: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"indiv-payment-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"indiv-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Total ($\", ((payment.amount * payment.cut + payment.tip) / 100).toFixed(2), \") / Workers (\", payment.workers, \") = \"), React.createElement(\"span\", {\n      className: \"indiv-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"YOUR TAKE\"), React.createElement(\"span\", {\n      className: \"indiv-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"$\", ((payment.amount * payment.cut + payment.tip) / 100 / payment.workers).toFixed(2))), React.createElement(\"div\", {\n      className: \"invoice-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invoice-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Flat worker rate\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Hours worked\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Number of workers\"), React.createElement(\"hr\", {\n      className: \"invoice-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Subtotal\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Platform Fee (\", ((1 - payment.cut) * 100).toFixed(0), \"%)\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Gratuity\"), React.createElement(\"hr\", {\n      className: \"invoice-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(\"div\", {\n      className: \"invoice-column right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"$\", payment.rate.toFixed(2)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, payment.hours), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, payment.workers), React.createElement(\"hr\", {\n      className: \"invoice-hr right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"$\", (payment.amount / 100).toFixed(2))), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"$\", (payment.amount * (1 - payment.cut) / 100).toFixed(2)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"$\", (payment.tip / 100).toFixed(2)), React.createElement(\"hr\", {\n      className: \"invoice-hr right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"$\", ((payment.amount * payment.cut + payment.tip) / 100).toFixed(2)))))), React.createElement(\"div\", {\n      className: \"icon-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hide-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      month: moment.utc(job.date).format(\"MMM\"),\n      day: moment.utc(job.date).format(\"DD\"),\n      color: \"grey\",\n      style: {\n        width: \"12rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"customer-info-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"customer-info-text show-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"DATE:\"), \" \", moment.utc(job.date).format('MMM DD, YYYY')), React.createElement(\"span\", {\n      className: \"customer-info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"TIME:\"), \" \", getTime(job.time), \" \", job.tz), React.createElement(\"span\", {\n      className: \"customer-info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"CUSTOMER NAME:\"), \" \", job.first, \" \", job.last), React.createElement(\"span\", {\n      className: \"customer-info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"CUSTOMER PHONE:\"), \" \", React.createElement(\"a\", {\n      style: {\n        margin: \"0\"\n      },\n      href: `tel: +1${job.phone.replace(/\\D+/g, '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, job.phone)), React.createElement(\"span\", {\n      className: \"customer-info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"LOCATION:\"), \" \", React.createElement(\"a\", {\n      href: `http://maps.google.com/?q=${job.address}, ${job.city}, ${job.state} ${job.zip}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, job.address, \", \", job.city, \", \", job.state, \" \", job.zip)))), React.createElement(\"div\", {\n      className: \"description-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"DESCRIPTION:\")), React.createElement(\"span\", {\n      className: \"description-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, job.description)), React.createElement(\"span\", {\n      className: \"worker-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Workers (\", job.workers, \"):\"), React.createElement(\"div\", {\n      className: \"workers-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, workers), job.status != \"Completed\" && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, job.status == \"Scheduled\" && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"worker-hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"instructions-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"IMPORTANT NOTE: If you cancel your job, you will be charged a $5.00 flat fee for cancellation.\")), !this.props.scheduled && React.createElement(\"button\", {\n      className: \"accept-btn\",\n      onClick: this.confirmAccept,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"ACCEPT JOB\"), this.props.scheduled && React.createElement(\"button\", {\n      className: \"cancel-btn\",\n      onClick: this.confirmCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"CANCEL JOB\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  assignments: state.jobassignments\n});\n\nexport default connect(mapStateToProps, {\n  db_add_assignment,\n  db_get_job_assignments,\n  db_remove_assignment\n})(withRouter(WorkerJobDetail));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/WorkerJobDetail.js"],"names":["React","Component","Fragment","Link","withRouter","connect","confirmAlert","moment","empty","getTime","getImg","locmark","db_add_assignment","db_get_job_assignments","db_remove_assignment","db_get_payment","Calendar","Clock","WorkerCard","Loading","WorkerJobDetail","constructor","props","cancelJob","resp","id","job","assignment_id","stripe_id","user","complete","hide","acceptJob","worker_id","job_id","workers","history","push","confirmAccept","title","message","buttons","label","onClick","confirmCancel","state","loaded","payment","componentDidMount","scheduled","status","setState","render","assignments","i","length","type","color","borderBottom","amount","cut","tip","toFixed","rate","hours","utc","date","format","width","time","tz","first","last","margin","phone","replace","address","city","zip","description","mapStateToProps","auth","jobassignments"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {confirmAlert} from 'react-confirm-alert';\nimport moment from 'moment';\nimport empty from 'is-empty';\nimport getTime from '../../utils/getTime';\nimport getImg from '../../utils/getImg';\nimport locmark from '../../images/locmark.png';\nimport {db_add_assignment, db_get_job_assignments, db_remove_assignment} from '../../store/actions/assignments';\nimport {db_get_payment} from '../../store/actions/payments';\n\nimport Calendar from '../Graphics/Calendar';\nimport Clock from '../Graphics/Clock';\nimport WorkerCard from '../Graphics/WorkerCard';\nimport Loading from '../Graphics/Loading';\n\nclass WorkerJobDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tpayment: {}\n\t\t};\n\t}\n\n  async componentDidMount() {\n  \tawait this.props.db_get_job_assignments(this.props.scheduled ? this.props.job.job_id : this.props.job.id);\n  \tlet payment = {};\n  \tif(this.props.job.status == \"Completed\") {\n  \t\tpayment = await db_get_payment(this.props.job.job_id);\n  \t}\n  \tthis.setState({\n  \t\tloaded: true,\n  \t\tpayment: payment.complete ? payment.payment : {}\n  \t});\n  }\n\n  cancelJob = async () => {\n  \tconst resp = await this.props.db_remove_assignment({id: this.props.job.assignment_id, stripe_id: this.props.user.stripe_id});\n  \tif(resp.complete) this.props.hide();\n  }\n\n  acceptJob = async () => {\n  \tconst resp = await this.props.db_add_assignment({\n  \t\tworker_id: this.props.user.id,\n  \t\tjob_id: this.props.job.id,\n  \t\tworkers: this.props.job.workers\n  \t});\n  \tif(resp.complete) this.props.history.push('/worker/dashboard/manage');\n  }\n\n  confirmAccept = () => {\n  \tconfirmAlert({\n      title: 'Before you accept...',\n      message: 'Are you sure you will be able to make it to this job? Once you book a job, if you cancel, you will be charged a $5 cancellation fee.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.acceptJob()\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  }\n\n  confirmCancel = () => {\n  \tconfirmAlert({\n      title: 'Confirm Job Cancellation',\n      message: 'Are you sure you want to cancel? You will be charged a $5 cancellation fee.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.cancelJob()\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  }\n\n\trender() {\n\t\tconst {job, assignments} = this.props;\n\t\tconst {payment} = this.state;\n\t\tlet workers = [];\n\t\tfor(let i = 0; i < assignments.length; i++) {\n\t\t\tworkers.push(<WorkerCard key={i} worker={assignments[i]}/>);\n\t\t}\n\t\tfor(let i = assignments.length; i < job.workers; i++) {\n\t\t\tworkers.push(<WorkerCard key={i} def/>);\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"job-overlay\">\n\t\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t\t{this.state.loaded && (<div className=\"overlay-box\">\n\t\t\t\t\t\t<span className=\"close\" onClick={this.props.hide}>X</span>\n\t\t\t\t\t\t<img className=\"detail-header-img\" src={getImg(job.type)} alt=\"\"/>\n\t\t\t\t\t\t<div className=\"detail-title-div\">\n\t\t\t\t\t\t\t<span className=\"detail-title\">{job.type}</span>\n\t\t\t\t\t\t\t<span className=\"status-title\">Status: <span style={{color: job.status == \"Pending\" ? \"red\" : \"green\"}}>{job.status}</span></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"overlay-content\">\n\t\t\t\t\t\t\t{job.status == \"Completed\" && (<div className=\"icon-section\" style={{borderBottom: \"none\"}}>\n\t\t\t\t\t\t\t\t<div className=\"indiv-payment-div\">\n\t\t\t\t\t\t\t\t\t<span className=\"indiv-description\">Total (${(((payment.amount * payment.cut) + payment.tip) / 100).toFixed(2)}) / Workers ({payment.workers}) = </span>\n\t\t\t\t\t\t\t\t\t<span className=\"indiv-description\">YOUR TAKE</span>\n\t\t\t\t\t\t\t\t\t<span className=\"indiv-value\">${(((payment.amount * payment.cut) + payment.tip) / 100 / payment.workers).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"invoice-section\">\n\t\t\t\t\t\t\t\t\t<div className=\"invoice-column\">\n\t\t\t\t\t\t\t\t\t\t<span>Flat worker rate</span>\n\t\t\t\t\t\t\t\t\t\t<span>Hours worked</span>\n\t\t\t\t\t\t\t\t\t\t<span>Number of workers</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>Subtotal</strong></span>\n\t\t\t\t\t\t\t\t\t\t<span>Platform Fee ({((1-payment.cut)*100).toFixed(0)}%)</span>\n\t\t\t\t\t\t\t\t\t\t<span>Gratuity</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>Total</strong></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"invoice-column right\">\n\t\t\t\t\t\t\t\t\t\t<span>${(payment.rate).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{payment.hours}</span>\n\t\t\t\t\t\t\t\t\t\t<span>{payment.workers}</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr right\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>${((payment.amount) / 100).toFixed(2)}</strong></span>\n\t\t\t\t\t\t\t\t\t\t<span style={{color: \"red\"}}>${((payment.amount) * (1-payment.cut) / 100).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t<span>${((payment.tip)/100).toFixed(2)}</span>\n\t\t\t\t\t\t\t\t\t\t<hr className=\"invoice-hr right\"/>\n\t\t\t\t\t\t\t\t\t\t<span><strong>${(((payment.amount * payment.cut) + payment.tip) / 100).toFixed(2)}</strong></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>)}\n\t\t\t\t\t\t\t<div className=\"icon-section\">\n\t\t\t\t\t\t\t\t<div className=\"hide-small\"><Calendar month={moment.utc(job.date).format(\"MMM\")} day={moment.utc(job.date).format(\"DD\")} color=\"grey\" style={{width: \"12rem\"}}/></div>\n\t\t\t\t\t\t\t\t<div className=\"customer-info-div\">\n\t\t\t\t\t\t\t\t\t<span className=\"customer-info-text show-small\"><strong>DATE:</strong> {moment.utc(job.date).format('MMM DD, YYYY')}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"customer-info-text\"><strong>TIME:</strong> {getTime(job.time)} {job.tz}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"customer-info-text\"><strong>CUSTOMER NAME:</strong> {job.first} {job.last}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"customer-info-text\"><strong>CUSTOMER PHONE:</strong> <a style={{margin: \"0\"}} href={`tel: +1${job.phone.replace(/\\D+/g, '')}`}>{job.phone}</a></span>\n\t\t\t\t\t\t\t\t\t<span className=\"customer-info-text\"><strong>LOCATION:</strong> <a href={`http://maps.google.com/?q=${job.address}, ${job.city}, ${job.state} ${job.zip}`} target=\"_blank\">{job.address}, {job.city}, {job.state} {job.zip}</a></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"description-div\">\n\t\t\t\t\t\t\t\t<span><strong>DESCRIPTION:</strong></span>\n\t\t\t\t\t\t\t\t<span className=\"description-content\">{job.description}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"worker-title\">Workers ({job.workers}):</span>\n\t\t\t\t\t\t\t<div className=\"workers-div\">\n\t\t\t\t\t\t\t\t{workers}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{job.status != \"Completed\" && (<Fragment>\n\t\t\t\t\t\t\t{job.status == \"Scheduled\" && (<Fragment>\n\t\t\t\t\t\t\t\t<hr className=\"worker-hr\"/>\n\t\t\t\t\t\t\t\t<div className=\"instructions-block\">\n\t\t\t\t\t\t\t\t\tIMPORTANT NOTE: If you cancel your job, you will be charged \n\t\t\t\t\t\t\t\t\ta $5.00 flat fee for cancellation.\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>)}\n\t\t\t\t\t\t\t{!this.props.scheduled && (<button className=\"accept-btn\" onClick={this.confirmAccept}>ACCEPT JOB</button>)}\n\t\t\t\t\t\t\t{this.props.scheduled && (<button className=\"cancel-btn\" onClick={this.confirmCancel}>CANCEL JOB</button>)}\n\t\t\t\t\t\t\t</Fragment>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>)}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tuser: state.auth.user,\n\tassignments: state.jobassignments\n});\n\nexport default connect(mapStateToProps,{db_add_assignment, db_get_job_assignments, db_remove_assignment})(withRouter(WorkerJobDetail));\n\n"]},"metadata":{},"sourceType":"module"}