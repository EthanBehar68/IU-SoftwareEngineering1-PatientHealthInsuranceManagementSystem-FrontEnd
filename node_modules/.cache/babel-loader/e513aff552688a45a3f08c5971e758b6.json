{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/CardForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport { injectStripe, CardElement } from 'react-stripe-elements';\nimport { connect } from \"react-redux\";\nimport { db_update_card } from '../../store/actions/customers';\n\nclass CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateCard = async data => {\n      try {\n        const resp = await this.props.db_update_card(_objectSpread({}, this.props.user, {\n          source_id: data.source.id,\n          last4: data.source.card.last4,\n          exp: `${data.source.card.exp_month}/${data.source.card.exp_year}`\n        }));\n        resp.complete ? this.props.onCancel() : this.props.onError(resp.message);\n      } catch (e) {\n        this.props.onError('Incorrect input');\n      }\n    };\n\n    this.onCancel = e => {\n      e.preventDefault();\n      this.props.onCancel();\n    };\n\n    this.handleSubmit = ev => {\n      // We don't want to let default form submission happen here, which would refresh the page.\n      ev.preventDefault();\n      this.props.onLoading(); // Use Elements to get a reference to the Card Element mounted somewhere\n      // in your <Elements> tree. Elements will know how to find your Card Element\n      // becase only one is allowed.\n      // See our getElement documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#elements-get-element\n\n      const cardElement = this.props.elements.getElement('card');\n      this.props.stripe.createSource({\n        type: 'card',\n        owner: {\n          name: `${this.props.user.first} ${this.props.user.last}`\n        }\n      }).then(this.onUpdateCard).catch(function (err) {\n        console.log(err);\n        this.props.onError('Card not valid');\n      });\n    };\n\n    this.onUpdateCard = this.onUpdateCard.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"1rem\",\n        paddingRight: \"1rem\",\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(CardElement, {\n      style: {\n        base: {\n          fontSize: '16px',\n          backgroundColor: 'white',\n          lineHeight: \"2rem\",\n          borderRadius: \"4px\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), this.props.existing && React.createElement(\"div\", {\n      className: \"card-btn-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"sign-in-btn card-btn cancel-card-btn\",\n      onClick: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"sign-in-btn card-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Save Card\")), !this.props.existing && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"sign-in-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Save Card\")));\n  }\n\n}\n\nexport default connect(null, {\n  db_update_card\n})(injectStripe(CardForm));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/CardForm.js"],"names":["React","Component","Fragment","injectStripe","CardElement","connect","db_update_card","CardForm","constructor","props","onUpdateCard","data","resp","user","source_id","source","id","last4","card","exp","exp_month","exp_year","complete","onCancel","onError","message","e","preventDefault","handleSubmit","ev","onLoading","cardElement","elements","getElement","stripe","createSource","type","owner","name","first","last","then","catch","err","console","log","bind","render","paddingLeft","paddingRight","backgroundColor","base","fontSize","lineHeight","borderRadius","existing"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {injectStripe, CardElement} from 'react-stripe-elements';\nimport {connect} from \"react-redux\";\nimport {db_update_card} from '../../store/actions/customers';\n\nclass CardForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.onUpdateCard = this.onUpdateCard.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onUpdateCard = async data => {\n    try {\n      const resp = await this.props.db_update_card({...this.props.user, source_id: data.source.id, last4: data.source.card.last4, exp: `${data.source.card.exp_month}/${data.source.card.exp_year}`});\n      resp.complete ? this.props.onCancel() : this.props.onError(resp.message);\n    } catch(e) {\n      this.props.onError('Incorrect input');\n    }\n  }\n\n  onCancel = e => {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n  handleSubmit = (ev) => {\n    // We don't want to let default form submission happen here, which would refresh the page.\n    ev.preventDefault();\n    this.props.onLoading();\n    // Use Elements to get a reference to the Card Element mounted somewhere\n    // in your <Elements> tree. Elements will know how to find your Card Element\n    // becase only one is allowed.\n    // See our getElement documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#elements-get-element\n    const cardElement = this.props.elements.getElement('card');\n\n    this.props.stripe.createSource({\n      type: 'card',\n      owner: {\n        name: `${this.props.user.first} ${this.props.user.last}`,\n      },\n    }).then(this.onUpdateCard)\n    .catch(function(err){console.log(err); this.props.onError('Card not valid');});\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"payment-form\">\n        <div style={{paddingLeft: \"1rem\", paddingRight: \"1rem\", backgroundColor: \"white\"}}><CardElement style={{base: {fontSize: '16px', backgroundColor: 'white', lineHeight: \"2rem\", borderRadius: \"4px\"}}} /></div>\n        {this.props.existing && (<div className=\"card-btn-container\">\n          <button className=\"sign-in-btn card-btn cancel-card-btn\" onClick={this.onCancel}>Cancel</button>\n          <button type=\"submit\" className=\"sign-in-btn card-btn\">Save Card</button>\n        </div>)}\n        {!this.props.existing && (<div>\n          <button type=\"submit\" className=\"sign-in-btn\">Save Card</button>\n        </div>)}\n      </form>\n    );\n  }\n}\n\nexport default connect(null, {db_update_card})(injectStripe(CardForm));\n"]},"metadata":{},"sourceType":"module"}