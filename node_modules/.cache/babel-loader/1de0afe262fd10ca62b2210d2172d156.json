{"ast":null,"code":"function _typeof(e) {\n  return (_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\n\nfunction _classCallCheck(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var i = t[n];\n    i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n  }\n}\n\nfunction _createClass(e, t, n) {\n  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n}\n\nfunction _defineProperty(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\n\nfunction _inherits(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), t && _setPrototypeOf(e, t);\n}\n\nfunction _getPrototypeOf(e) {\n  return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\n\nfunction _setPrototypeOf(e, t) {\n  return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\n\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\n\nfunction _possibleConstructorReturn(e, t) {\n  return !t || \"object\" != typeof t && \"function\" != typeof t ? _assertThisInitialized(e) : t;\n}\n\nfunction debounced(e, t) {\n  var n;\n  return function () {\n    for (var i = arguments.length, o = new Array(i), r = 0; r < i; r++) o[r] = arguments[r];\n\n    n && clearTimeout(n), n = setTimeout(function () {\n      e.apply(void 0, o), n = null;\n    }, t);\n  };\n}\n\nfunction throttled(e, t) {\n  var n = 0;\n  return function () {\n    var i = new Date().getTime();\n    if (!(i - n < t)) return n = i, e.apply(void 0, arguments);\n  };\n}\n\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar IS_BROWSER = \"object\" === (\"undefined\" == typeof window ? \"undefined\" : \"undefined\" == typeof window ? \"undefined\" : _typeof(window)),\n    DEFAULT_ELEMENT = IS_BROWSER ? document : {},\n    DEFAULT_EVENTS = [\"mousemove\", \"keydown\", \"wheel\", \"DOMMouseScroll\", \"mouseWheel\", \"mousedown\", \"touchstart\", \"touchmove\", \"MSPointerDown\", \"MSPointerMove\"],\n    IdleTimer = function (e) {\n  function t(e) {\n    var n;\n    if (_classCallCheck(this, t), n = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e)), _defineProperty(_assertThisInitialized(n), \"state\", {\n      idle: !1,\n      oldDate: +new Date(),\n      lastActive: +new Date(),\n      remaining: null,\n      pageX: null,\n      pageY: null\n    }), _defineProperty(_assertThisInitialized(n), \"tId\", null), _defineProperty(_assertThisInitialized(n), \"_handleEvent\", function (e) {\n      var t = n.state,\n          i = t.remaining,\n          o = t.pageX,\n          r = t.pageY,\n          s = t.idle,\n          a = n.props,\n          u = a.timeout,\n          l = a.onAction,\n          p = a.debounce,\n          d = a.throttle,\n          c = a.stopOnIdle;\n\n      if (p > 0 ? n.debouncedAction(e) : d > 0 ? n.throttledAction(e) : l(e), !i) {\n        if (\"mousemove\" === e.type) {\n          if (e.pageX === o && e.pageY === r) return;\n          if (void 0 === e.pageX && void 0 === e.pageY) return;\n          if (n.getElapsedTime() < 200) return;\n        }\n\n        clearTimeout(n.tId), n.tId = null;\n        var f = new Date() - n.getLastActiveTime();\n        (s && !c || !s && f > u) && n.toggleIdleState(e), n.setState({\n          lastActive: +new Date(),\n          pageX: e.pageX,\n          pageY: e.pageY\n        }), s ? c || (n.tId = setTimeout(n.toggleIdleState, u)) : n.tId = setTimeout(n.toggleIdleState, u);\n      }\n    }), e.debounce > 0 && e.throttle > 0) throw new Error(\"onAction can either be throttled or debounced (not both)\");\n    return e.debounce > 0 && (n.debouncedAction = debounced(e.onAction, e.debounce)), e.throttle > 0 && (n.throttledAction = throttled(e.onAction, e.throttle)), e.startOnMount || (n.state.idle = !0), n.toggleIdleState = n._toggleIdleState.bind(_assertThisInitialized(n)), n.reset = n.reset.bind(_assertThisInitialized(n)), n.pause = n.pause.bind(_assertThisInitialized(n)), n.resume = n.resume.bind(_assertThisInitialized(n)), n.getRemainingTime = n.getRemainingTime.bind(_assertThisInitialized(n)), n.getElapsedTime = n.getElapsedTime.bind(_assertThisInitialized(n)), n.getLastActiveTime = n.getLastActiveTime.bind(_assertThisInitialized(n)), n.isIdle = n._isIdle.bind(_assertThisInitialized(n)), n;\n  }\n\n  return _inherits(t, e), _createClass(t, [{\n    key: \"componentDidMount\",\n    value: function () {\n      this._bindEvents(), this.props.startOnMount && this.reset();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function (e) {\n      e.debounce !== this.props.debounce && (this.debouncedAction = debounced(this.props.onAction, this.props.debounce)), e.throttle !== this.props.throttle && (this.throttledAction = throttled(this.props.onAction, this.props.throttle));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      clearTimeout(this.tId), this._unbindEvents(!0);\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      return this.props.children || null;\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function () {\n      var e = this;\n\n      if (IS_BROWSER) {\n        var t = this.state.eventsBound,\n            n = this.props,\n            i = n.element,\n            o = n.events,\n            r = n.passive,\n            s = n.capture;\n        t || (o.forEach(function (t) {\n          i.addEventListener(t, e._handleEvent, {\n            capture: s,\n            passive: r\n          });\n        }), this.setState({\n          eventsBound: !0\n        }));\n      }\n    }\n  }, {\n    key: \"_unbindEvents\",\n    value: function () {\n      var e = this,\n          t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n\n      if (IS_BROWSER) {\n        var n = this.props,\n            i = n.element,\n            o = n.events,\n            r = n.passive,\n            s = n.capture;\n        (this.state.eventsBound || t) && (o.forEach(function (t) {\n          i.removeEventListener(t, e._handleEvent, {\n            capture: s,\n            passive: r\n          });\n        }), this.setState({\n          eventsBound: !1\n        }));\n      }\n    }\n  }, {\n    key: \"_toggleIdleState\",\n    value: function (e) {\n      var t = this;\n      this.setState(function (e) {\n        return {\n          idle: !e.idle\n        };\n      }, function () {\n        var n = t.props,\n            i = n.onActive,\n            o = n.onIdle,\n            r = n.stopOnIdle;\n        t.state.idle ? (r && (clearTimeout(t.tId), t.tId = null, t._unbindEvents()), o(e)) : r || (t._bindEvents(), i(e));\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function () {\n      clearTimeout(this.tId), this.tId = null, this._bindEvents(), this.setState({\n        idle: !1,\n        oldDate: +new Date(),\n        lastActive: +new Date(),\n        remaining: null\n      });\n      var e = this.props.timeout;\n      this.tId = setTimeout(this.toggleIdleState, e);\n    }\n  }, {\n    key: \"pause\",\n    value: function () {\n      null === this.state.remaining && (this._unbindEvents(), clearTimeout(this.tId), this.tId = null, this.setState({\n        remaining: this.getRemainingTime()\n      }));\n    }\n  }, {\n    key: \"resume\",\n    value: function () {\n      var e = this.state,\n          t = e.remaining,\n          n = e.idle;\n      null !== t && (this._bindEvents(), n || (this.setState({\n        remaining: null,\n        lastActive: +new Date()\n      }), this.tId = setTimeout(this.toggleIdleState, t)));\n    }\n  }, {\n    key: \"getRemainingTime\",\n    value: function () {\n      var e = this.state,\n          t = e.remaining,\n          n = e.lastActive,\n          i = this.props.timeout;\n      if (null !== t) return t < 0 ? 0 : t;\n      var o = i - (+new Date() - n);\n      return o < 0 ? 0 : o;\n    }\n  }, {\n    key: \"getElapsedTime\",\n    value: function () {\n      var e = this.state.oldDate;\n      return +new Date() - e;\n    }\n  }, {\n    key: \"getLastActiveTime\",\n    value: function () {\n      return this.state.lastActive;\n    }\n  }, {\n    key: \"_isIdle\",\n    value: function () {\n      return this.state.idle;\n    }\n  }]), t;\n}(Component);\n\n_defineProperty(IdleTimer, \"propTypes\", {\n  timeout: PropTypes.number,\n  events: PropTypes.arrayOf(PropTypes.string),\n  onIdle: PropTypes.func,\n  onActive: PropTypes.func,\n  onAction: PropTypes.func,\n  debounce: PropTypes.number,\n  throttle: PropTypes.number,\n  element: PropTypes.oneOfType([PropTypes.object, PropTypes.element]),\n  startOnMount: PropTypes.bool,\n  stopOnIdle: PropTypes.bool,\n  passive: PropTypes.bool,\n  capture: PropTypes.bool\n}), _defineProperty(IdleTimer, \"defaultProps\", {\n  timeout: 12e5,\n  element: DEFAULT_ELEMENT,\n  events: DEFAULT_EVENTS,\n  onIdle: function () {},\n  onActive: function () {},\n  onAction: function () {},\n  debounce: 0,\n  throttle: 0,\n  startOnMount: !0,\n  stopOnIdle: !1,\n  capture: !0,\n  passive: !0\n});\nexport default IdleTimer;","map":{"version":3,"sources":["../src/index.js"],"names":["IS_BROWSER","window","DEFAULT_ELEMENT","document","DEFAULT_EVENTS","IdleTimer","Component","timeout","PropTypes","number","events","arrayOf","string","onIdle","func","onActive","onAction","debounce","throttle","element","oneOfType","object","startOnMount","bool","stopOnIdle","passive","capture","idle","oldDate","Date","lastActive","remaining","pageX","pageY","props","Error","debouncedAction","debounced","throttledAction","throttled","state","toggleIdleState","_this","_toggleIdleState","bind","reset","pause","resume","getRemainingTime","getElapsedTime","getLastActiveTime","isIdle","_isIdle","_bindEvents","this","prevProps","clearTimeout","tId","_unbindEvents","children","eventsBound","forEach","addEventListener","e","_this2","_handleEvent","setState","force","removeEventListener","_this3","prevState","_this4","type","elapsedTimeSinceLastActive","setTimeout","timeLeft","fn","delay","timerId","args","lastCall","now","getTime"],"mappings":"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","sourcesContent":["/**\n *  ___    _ _     _____ _\n * |_ _|__| | | __|_   _(_)_ __ ___   ___ _ __\n *  | |/ _` | |/ _ \\| | | | '_ ` _ \\ / _ \\ '__|\n *  | | (_| | |  __/| | | | | | | | |  __/ |\n * |___\\__,_|_|\\___||_| |_|_| |_| |_|\\___|_|\n *\n * @name IdleTimer\n * @author Randy Lebeau\n * @private\n */\n\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Determine if we are in a browser\n * or a server environment\n * @type {Boolean}\n * @private\n */\nconst IS_BROWSER = (typeof window === 'undefined' ? 'undefined' : typeof (window)) === 'object'\n\n/**\n * Default element to listen for events on\n * @type {Object}\n * @private\n */\nconst DEFAULT_ELEMENT = IS_BROWSER ? document : {}\n\n/**\n * The default events to determine activity\n * @type {Array}\n * @private\n */\nconst DEFAULT_EVENTS = [\n  'mousemove',\n  'keydown',\n  'wheel',\n  'DOMMouseScroll',\n  'mouseWheel',\n  'mousedown',\n  'touchstart',\n  'touchmove',\n  'MSPointerDown',\n  'MSPointerMove'\n]\n\n/**\n * Detects when your user is idle\n * @class IdleTimer\n * @private\n */\nexport default class IdleTimer extends Component {\n  /**\n   * Type checks for every property\n   * @type {Object}\n   * @private\n   */\n  static propTypes = {\n    /**\n     * Activity Timeout in milliseconds\n     * default: 1200000\n     * @type {Number}\n     */\n    timeout: PropTypes.number,\n    /**\n     * DOM events to listen to\n     * default: see [default events](https://github.com/SupremeTechnopriest/react-idle-timer#default-events)\n     * @type {Array}\n     */\n    events: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Function to call when user is idle\n     * default: () => {}\n     * @type {Function}\n     */\n    onIdle: PropTypes.func,\n    /**\n     * Function to call when user becomes active\n     * default: () => {}\n     * @type {Function}\n     */\n    onActive: PropTypes.func,\n    /**\n     * Function to call on user actions\n     * default: () => {}\n     * @type {Function}\n     */\n    onAction: PropTypes.func,\n    /**\n     * Debounce the onAction function by setting delay in milliseconds\n     * default: 0\n     * @type {Number}\n     */\n    debounce: PropTypes.number,\n    /**\n     * Throttle the onAction function by setting delay in milliseconds\n     * default: 0\n     * @type {Number}\n     */\n    throttle: PropTypes.number,\n    /**\n     * Element reference to bind activity listeners to\n     * default: document\n     * @type {Object}\n     */\n    element: PropTypes.oneOfType([PropTypes.object, PropTypes.element]),\n    /**\n     * Start the timer on mount\n     * default: true\n     * @type {Boolean}\n     */\n    startOnMount: PropTypes.bool,\n    /**\n     * Once the user goes idle the IdleTimer will not\n     * reset on user input instead, reset() must be\n     * called manually to restart the timer\n     * default: false\n     * @type {Boolean}\n     */\n    stopOnIdle: PropTypes.bool,\n    /**\n     * Bind events passively\n     * default: true\n     * @type {Boolean}\n     */\n    passive: PropTypes.bool,\n    /**\n     * Capture events\n     * default: true\n     * @type {Boolean}\n     */\n    capture: PropTypes.bool\n  }\n\n  /**\n   * Sets default property values\n   * @type {Object}\n   * @private\n   */\n  static defaultProps = {\n    timeout: 1000 * 60 * 20,\n    element: DEFAULT_ELEMENT,\n    events: DEFAULT_EVENTS,\n    onIdle: () => {},\n    onActive: () => {},\n    onAction: () => {},\n    debounce: 0,\n    throttle: 0,\n    startOnMount: true,\n    stopOnIdle: false,\n    capture: true,\n    passive: true\n  }\n\n  /**\n   * Sets initial component state\n   * @type {Object}\n   * @private\n   */\n  state = {\n    idle: false,\n    oldDate: +new Date(),\n    lastActive: +new Date(),\n    remaining: null,\n    pageX: null,\n    pageY: null\n  }\n\n  /**\n   * The timer instance\n   * @type {Timeout}\n   * @private\n   */\n  tId = null\n\n  /**\n   * Creates an instance of IdleTimer\n   * bind all of our internal events here\n   * for best performance\n   * @param {Object} props\n   * @return {IdleTimer}\n   * @private\n   */\n  constructor (props) {\n    super(props)\n\n    // Debounce and throttle cant both be set\n    if (props.debounce > 0 && props.throttle > 0) {\n      throw new Error('onAction can either be throttled or debounced (not both)')\n    }\n\n    // Create debounced action if applicable\n    if (props.debounce > 0) {\n      this.debouncedAction = debounced(props.onAction, props.debounce)\n    }\n\n    // Create throttled action if applicable\n    if (props.throttle > 0) {\n      this.throttledAction = throttled(props.onAction, props.throttle)\n    }\n\n    // If startOnMount is set, idle state defaults to true\n    if (!props.startOnMount) {\n      this.state.idle = true\n    }\n\n    // Bind all events to component scope, built for speed 🚀\n    this.toggleIdleState = this._toggleIdleState.bind(this)\n    this.reset = this.reset.bind(this)\n    this.pause = this.pause.bind(this)\n    this.resume = this.resume.bind(this)\n    this.getRemainingTime = this.getRemainingTime.bind(this)\n    this.getElapsedTime = this.getElapsedTime.bind(this)\n    this.getLastActiveTime = this.getLastActiveTime.bind(this)\n    this.isIdle = this._isIdle.bind(this)\n  }\n\n  /**\n   * Runs once the component has mounted\n   * here we handle automatically starting\n   * the idletimer\n   * @private\n   */\n  componentDidMount () {\n    // Bind the event listeners\n    this._bindEvents()\n    // If startOnMount is enabled start the timer\n    const { startOnMount } = this.props\n    if (startOnMount) {\n      this.reset()\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    // Update debounce function\n    if (prevProps.debounce !== this.props.debounce) {\n      this.debouncedAction = debounced(this.props.onAction, this.props.debounce)\n    }\n    // Update throttle function\n    if (prevProps.throttle !== this.props.throttle) {\n      this.throttledAction = throttled(this.props.onAction, this.props.throttle)\n    }\n  }\n\n  /**\n   * Called before the component unmounts\n   * here we clear the timer and remove\n   * all the event listeners\n   * @private\n   */\n  componentWillUnmount () {\n    // Clear timeout to prevent delayed state changes\n    clearTimeout(this.tId)\n    this._unbindEvents(true)\n  }\n\n  /**\n   * Render children if IdleTimer is used as a wrapper\n   * @return {Component} children\n   * @private\n   */\n  render () {\n    const { children } = this.props\n    return children || null\n  }\n\n  /**\n   * Binds the specified events\n   * @private\n   */\n  _bindEvents () {\n    // Dont bind events if\n    // we are not in a browser\n    if (!IS_BROWSER) return\n    // Otherwise we bind all the events\n    // to the supplied element\n    const { eventsBound } = this.state\n    const { element, events, passive, capture } = this.props\n    if (!eventsBound) {\n      events.forEach(e => {\n        element.addEventListener(e, this._handleEvent, {\n          capture,\n          passive\n        })\n      })\n      this.setState({ eventsBound: true })\n    }\n  }\n\n  /**\n   * Unbinds all the bound events\n   * @private\n   */\n  _unbindEvents (force = false) {\n    // If we are not in a browser\n    // we dont need to unbind events\n    if (!IS_BROWSER) return\n    // Unbind all events\n    const { element, events, passive, capture } = this.props\n    const { eventsBound } = this.state\n    if (eventsBound || force) {\n      events.forEach(e => {\n        element.removeEventListener(e, this._handleEvent, {\n          capture,\n          passive\n        })\n      })\n      this.setState({ eventsBound: false })\n    }\n  }\n\n  /**\n   * Toggles the idle state and calls\n   * the correct action function\n   * @private\n   */\n  _toggleIdleState (e) {\n    // Fire the appropriate action\n    // and pass the event through\n    // Toggle the idle state\n    this.setState((prevState) => ({\n      idle: !prevState.idle\n    }), () => {\n      const { onActive, onIdle, stopOnIdle } = this.props\n      const { idle } = this.state\n      if (!idle) {\n        if (!stopOnIdle) {\n          this._bindEvents()\n          onActive(e)\n        }\n      } else {\n        if (stopOnIdle) {\n          // Clear any existing timeout\n          clearTimeout(this.tId)\n          this.tId = null\n          // Unbind events\n          this._unbindEvents()\n        }\n        onIdle(e)\n      }\n    })\n  }\n\n  /**\n   * Event handler for supported event types\n   * @param  {Object} e event object\n   * @private\n   */\n  _handleEvent = (e) => {\n    const { remaining, pageX, pageY, idle } = this.state\n    const { timeout, onAction, debounce, throttle, stopOnIdle } = this.props\n\n    // Fire debounced, throttled or raw onAction callback with event\n    if (debounce > 0) {\n      this.debouncedAction(e)\n    } else if (throttle > 0) {\n      this.throttledAction(e)\n    } else {\n      onAction(e)\n    }\n\n    // Already active, ignore events\n    if (remaining) return\n\n    // Mousemove event\n    if (e.type === 'mousemove') {\n      // If coord are same, it didn't move\n      if (e.pageX === pageX && e.pageY === pageY) {\n        return\n      }\n      // If coord don't exist how could it move\n      if (typeof e.pageX === 'undefined' && typeof e.pageY === 'undefined') {\n        return\n      }\n      // Under 200 ms is hard to do\n      // continuous activity will bypass this\n      //\n      // TODO: Cant seem to simulate this event with pageX and pageY for testing\n      // making this block of code unreachable by test suite\n      // opened an issue here https://github.com/Rich-Harris/simulant/issues/19\n      const elapsed = this.getElapsedTime()\n      if (elapsed < 200) {\n        return\n      }\n    }\n\n    // Clear any existing timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Determine last time User was active, as can't rely on setTimeout ticking at the correct interval\n    const elapsedTimeSinceLastActive = new Date() - this.getLastActiveTime()\n\n    // If the user is idle or last active time is more than timeout, flip the idle state\n    if ((idle && !stopOnIdle) || (!idle && elapsedTimeSinceLastActive > timeout)) {\n      this.toggleIdleState(e)\n    }\n\n    // Store when the user was last active\n    // and update the mouse coordinates\n    this.setState({\n      lastActive: +new Date(), // store when user was last active\n      pageX: e.pageX, // update mouse coord\n      pageY: e.pageY\n    })\n\n    // If the user is idle and stopOnIdle flag is not set\n    // set a new timeout\n    if (idle) {\n      if (!stopOnIdle) {\n        this.tId = setTimeout(this.toggleIdleState, timeout)\n      }\n    } else {\n      this.tId = setTimeout(this.toggleIdleState, timeout)\n    }\n  }\n\n  /**\n   * Restore initial state and restart timer\n   * @name reset\n   */\n  reset () {\n    // Clear timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Bind the events\n    this._bindEvents()\n\n    // Reset state\n    this.setState({\n      idle: false,\n      oldDate: +new Date(),\n      lastActive: +new Date(),\n      remaining: null\n    })\n\n    // Set new timeout\n    const { timeout } = this.props\n    this.tId = setTimeout(this.toggleIdleState, timeout)\n  }\n\n  /**\n   * Store remaining time and stop timer\n   * @name pause\n   */\n  pause () {\n    // Timer is already paused\n    const { remaining } = this.state\n    if (remaining !== null) {\n      return\n    }\n\n    // Unbind events\n    this._unbindEvents()\n\n    // Clear existing timeout\n    clearTimeout(this.tId)\n    this.tId = null\n\n    // Define how much is left on the timer\n    this.setState({\n      remaining: this.getRemainingTime()\n    })\n  }\n\n  /**\n   * Resumes a paused timer\n   * @name resume\n   */\n  resume () {\n    // Timer is not paused\n    const { remaining, idle } = this.state\n    if (remaining === null) {\n      return\n    }\n\n    // Bind events\n    this._bindEvents()\n\n    // Start timer and clear remaining\n    // if we are in the idle state\n    if (!idle) {\n      this.setState({ remaining: null, lastActive: +new Date() })\n      // Set a new timeout\n      this.tId = setTimeout(this.toggleIdleState, remaining)\n    }\n  }\n\n  /**\n   * Time remaining before idle\n   * @name getRemainingTime\n   * @return {Number} Milliseconds remaining\n   */\n  getRemainingTime () {\n    const { remaining, lastActive } = this.state\n    const { timeout } = this.props\n\n    // If idle there is no time remaining\n    if (remaining !== null) {\n      return remaining < 0 ? 0 : remaining\n    }\n\n    // Determine remaining, if negative idle didn't finish flipping, just return 0\n    let timeLeft = timeout - ((+new Date()) - lastActive)\n    return timeLeft < 0 ? 0 : timeLeft\n  }\n\n  /**\n   * How much time has elapsed\n   * @name getElapsedTime\n   * @return {Timestamp}\n   */\n  getElapsedTime () {\n    const { oldDate } = this.state\n    return (+new Date()) - oldDate\n  }\n\n  /**\n   * Last time the user was active\n   * @name getLastActiveTime\n   * @return {Timestamp}\n   */\n  getLastActiveTime () {\n    const { lastActive } = this.state\n    return lastActive\n  }\n\n  /**\n   * Returns wether or not the user is idle\n   * @name isIdle\n   * @return {Boolean}\n   */\n  _isIdle () {\n    const { idle } = this.state\n    return idle\n  }\n}\n\n/**\n * Creates a debounced function that delays invoking func until\n * after delay milliseconds has elapsed since the last time the\n * debounced function was invoked.\n * @name debounced\n * @param  {Function} fn   Function to debounce\n * @param  {Number} delay  How long to wait\n * @return {Function}      Executed Function\n**/\nfunction debounced (fn, delay) {\n  let timerId\n  return function (...args) {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n\n/**\n * Creates a throttled function that only invokes func at most\n * once per every wait milliseconds.\n * @name throttled\n * @param  {Function} fn   Function to debounce\n * @param  {Number} delay  How long to wait\n * @return {Function}      Executed Function\n**/\nfunction throttled (fn, delay) {\n  let lastCall = 0\n  return function (...args) {\n    const now = new Date().getTime()\n    if (now - lastCall < delay) {\n      return\n    }\n    lastCall = now\n    return fn(...args)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}