{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { apiCall } from '../../services/api';\nimport { GET_PRODUCTS, REMOVE_PRODUCT } from '../types';\nimport empty from 'is-empty';\nexport const state_get_products = payload => ({\n  type: GET_PRODUCTS,\n  payload\n});\nexport const state_remove_job = i => ({\n  type: REMOVE_PRODUCT,\n  i\n});\nexport const db_get_products = user => dispatch => {\n  return apiCall('get', `/api/customers/${user.id}`).then(function (res) {\n    dispatch(state_get_customer(_objectSpread({}, user, {}, res[0])));\n    return {\n      complete: true\n    };\n  }).catch(function (err) {\n    return {\n      complete: false,\n      message: err.error\n    };\n  });\n};","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/store/actions/products.js"],"names":["apiCall","GET_PRODUCTS","REMOVE_PRODUCT","empty","state_get_products","payload","type","state_remove_job","i","db_get_products","user","dispatch","id","then","res","state_get_customer","complete","catch","err","message","error"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,UAA3C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,KAAK;AAC7CC,EAAAA,IAAI,EAAEL,YADuC;AAE7CI,EAAAA;AAF6C,CAAL,CAAlC;AAKP,OAAO,MAAME,gBAAgB,GAAGC,CAAC,KAAK;AACrCF,EAAAA,IAAI,EAAEJ,cAD+B;AAErCM,EAAAA;AAFqC,CAAL,CAA1B;AAKP,OAAO,MAAMC,eAAe,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AAClD,SAAOX,OAAO,CAAC,KAAD,EAAS,kBAAiBU,IAAI,CAACE,EAAG,EAAlC,CAAP,CACNC,IADM,CACD,UAASC,GAAT,EAAc;AACnBH,IAAAA,QAAQ,CAACI,kBAAkB,mBAAKL,IAAL,MAAcI,GAAG,CAAC,CAAD,CAAjB,EAAnB,CAAR;AACA,WAAO;AAACE,MAAAA,QAAQ,EAAE;AAAX,KAAP;AACA,GAJM,EAKNC,KALM,CAKA,UAASC,GAAT,EAAc;AACpB,WAAO;AAACF,MAAAA,QAAQ,EAAE,KAAX;AAAkBG,MAAAA,OAAO,EAAED,GAAG,CAACE;AAA/B,KAAP;AACA,GAPM,CAAP;AAQA,CATM","sourcesContent":["import {apiCall} from '../../services/api';\nimport {GET_PRODUCTS, REMOVE_PRODUCT} from '../types';\nimport empty from 'is-empty';\n\nexport const state_get_products = payload => ({\n\ttype: GET_PRODUCTS,\n\tpayload\n});\n\nexport const state_remove_job = i => ({\n\ttype: REMOVE_PRODUCT,\n\ti\n});\n\nexport const db_get_products = user => dispatch => {\n\treturn apiCall('get', `/api/customers/${user.id}`)\n\t.then(function(res) {\n\t\tdispatch(state_get_customer({...user, ...res[0]}));\n\t\treturn {complete: true};\n\t})\n\t.catch(function(err) {\n\t\treturn {complete: false, message: err.error};\n\t});\n}"]},"metadata":{},"sourceType":"module"}