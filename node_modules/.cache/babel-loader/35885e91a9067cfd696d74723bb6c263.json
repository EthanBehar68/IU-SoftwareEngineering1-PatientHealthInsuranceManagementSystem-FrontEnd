{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { state_get_products } from \"../../store/actions/products\";\nimport moment from 'moment';\nimport empty from 'is-empty';\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ProductCard from '../../components/Forms/ProductCard';\nimport test from '../../images/dadshort.png';\nimport test2 from '../../images/spottedsweatshirt.png';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sumItems = products => {\n      let count = 0;\n      products.forEach(function (item) {\n        count += parseInt(item.quantity);\n      });\n      return count;\n    };\n\n    this.toCart = products => {\n      this.setState(_objectSpread({}, this.state, {\n        products: [...this.state.products, ...products],\n        items: this.state.items + this.sumItems(products)\n      }));\n    };\n\n    this.toCheckout = () => {\n      this.props.state_get_products(this.state.products);\n    };\n\n    this.state = {\n      loaded: false,\n      products: [],\n      items: 0\n    };\n    this.toCart = this.toCart.bind(this);\n    this.sumItems = this.sumItems.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loaded: true\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      active: \"home\",\n      items: this.state.items,\n      toCheckout: this.toCheckout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ProductCard, {\n      photo: test,\n      product: \"Dad's Weekend\",\n      price: 25.00,\n      toCart: this.toCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ProductCard, {\n      photo: test2,\n      product: \"Spotted Cow\",\n      price: 42.00,\n      toCart: this.toCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  state_get_products\n})(withRouter(Products));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Products.js"],"names":["React","Component","Fragment","Link","withRouter","connect","state_get_products","moment","empty","Navbar","Loading","ProductCard","test","test2","Products","constructor","props","sumItems","products","count","forEach","item","parseInt","quantity","toCart","setState","state","items","toCheckout","loaded","bind","componentDidMount","render","mapStateToProps","user","auth"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {state_get_products} from \"../../store/actions/products\";\nimport moment from 'moment';\nimport empty from 'is-empty';\n\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ProductCard from '../../components/Forms/ProductCard';\n\nimport test from '../../images/dadshort.png';\nimport test2 from '../../images/spottedsweatshirt.png';\n\nclass Products extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n\t\t\tproducts: [],\n\t\t\titems: 0\n\t\t};\n\t\tthis.toCart = this.toCart.bind(this);\n\t\tthis.sumItems = this.sumItems.bind(this);\n\t}\n\n  async componentDidMount() {\n  \tthis.setState({\n  \t\tloaded: true\n  \t});\n  }\n\n  sumItems = products => {\n  \tlet count = 0;\n  \tproducts.forEach(function(item) {\n  \t\tcount += parseInt(item.quantity)\n  \t});\n  \treturn count;\n  }\n\n  toCart = products => {\n  \tthis.setState({\n  \t\t...this.state,\n  \t\tproducts: [...this.state.products, ...products],\n  \t\titems: this.state.items + this.sumItems(products)\n  \t})\n  }\n\n  toCheckout = () => {\n  \tthis.props.state_get_products(this.state.products);\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar active=\"home\" items={this.state.items} toCheckout={this.toCheckout}/>\n\t\t\t\t{!this.state.loaded && (<Loading />)}\n\t\t\t\t{this.state.loaded && (<div className=\"dashboard-container\">\n\t\t\t\t\t<div className=\"dashboard-box\">\n\t\t\t\t\t\t<ProductCard photo={test} product=\"Dad's Weekend\" price={25.00} toCart={this.toCart}/>\n\t\t\t\t\t\t<ProductCard photo={test2} product=\"Spotted Cow\" price={42.00} toCart={this.toCart}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps,{state_get_products})(withRouter(Products));\n\n\n"]},"metadata":{},"sourceType":"module"}