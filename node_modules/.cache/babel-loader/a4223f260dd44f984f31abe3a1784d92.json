{"ast":null,"code":"import _objectSpread from \"/Users/jackjoliet/Documents/marketplace/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Checkout.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport sumItems from '../../utils/sumItems';\nimport getTotal from '../../utils/getTotal';\nimport { db_get_products } from \"../../store/actions/products\";\nimport { db_charge_customer } from '../../store/actions/orders';\nimport moment from 'moment';\nimport empty from 'is-empty';\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ErrorBanner from '../../components/Graphics/ErrorBanner';\nimport CheckoutPay from '../../components/Forms/CheckoutPay';\nimport ProductRow from '../../components/Forms/ProductRow';\n\nclass Checkout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeRow = i => {\n      this.setState(_objectSpread({}, this.state, {\n        products: this.state.products.filter((product, index) => index != i),\n        data: _objectSpread({}, this.state.data, {\n          amount: getTotal(this.state.products.filter((product, index) => index != i))\n        })\n      }));\n      localStorage.setItem(\"products\", JSON.stringify(this.state.products.filter((product, index) => index != i)));\n    };\n\n    this.onDataChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          [e.target.id]: e.target.value\n        })\n      }));\n    };\n\n    this.checkEmpties = () => {\n      let arr = [];\n      const data = this.state.data;\n\n      for (var key in data) {\n        if (empty(data[key])) {\n          arr.push(key);\n        }\n      }\n\n      if (empty(arr)) {\n        this.setState(_objectSpread({}, this.state, {\n          empties: true\n        }));\n        return true;\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          empties: false\n        }));\n        return false;\n      }\n    };\n\n    this.chargeCustomer = data => {\n      const resp = this.props.db_charge_customer(data);\n\n      if (resp.complete) {\n        this.setState(_objectSpread({}, this.state, {\n          products: []\n        }));\n        localStorage.setItem(\"products\", JSON.stringify([]));\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          error: resp.message\n        }));\n      }\n    };\n\n    this.state = {\n      loaded: false,\n      products: [],\n      data: {\n        name: '',\n        phone: '',\n        email: '',\n        org: '',\n        amount: 0\n      },\n      error: '',\n      empties: false\n    };\n    this.checkEmpties = this.checkEmpties.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.props.db_get_products();\n    const products = empty(localStorage.getItem(\"products\")) ? [] : await JSON.parse(localStorage.getItem(\"products\")).map(pro => Object.assign(pro, this.props.products.find(p => pro.id == p.id))).filter(product => product.active);\n    localStorage.setItem(\"products\", JSON.stringify(products.filter(product => product.active)));\n    this.setState({\n      loaded: true,\n      products: products,\n      items: sumItems(products),\n      data: _objectSpread({}, this.state.data, {\n        amount: getTotal(products)\n      })\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data != prevState.data) {\n      this.checkEmpties();\n    }\n  }\n\n  render() {\n    const data = this.state.data;\n    let product_list = this.state.products.map((product, i) => React.createElement(ProductRow, {\n      product: product,\n      key: i,\n      removeRow: () => this.removeRow(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      active: \"home\",\n      items: sumItems(this.state.products),\n      toCheckout: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), !empty(this.state.error) && React.createElement(ErrorBanner, {\n      error: this.state.error,\n      onHide: () => this.setState(_objectSpread({}, this.state, {\n        error: ''\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), !this.state.loaded && React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.loaded && React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-box\",\n      style: {\n        marginTop: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"personal-info-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        margin: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Personal Info\"), React.createElement(\"span\", {\n      style: {\n        marginBottom: \"0.5rem\",\n        fontSize: \"0.8rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"*You must fill out all fields before proceeding to payment.\"), React.createElement(\"div\", {\n      className: \"personal-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"apparel-input\",\n      value: data.name,\n      onChange: this.onDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Phone:\"), React.createElement(\"input\", {\n      type: \"tel\",\n      id: \"phone\",\n      className: \"apparel-input\",\n      value: data.phone,\n      onChange: this.onDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"info-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"apparel-input\",\n      value: data.email,\n      onChange: this.onDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Fraternity/Sorority:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"org\",\n      className: \"apparel-input\",\n      value: data.org,\n      onChange: this.onDataChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })))), React.createElement(\"table\", {\n      className: \"product-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      className: \"product-table-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"product-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"product-head hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"th\", {\n      className: \"product-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      className: \"product-head\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"th\", {\n      className: \"product-head\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      className: \"product-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Price\")), !empty(this.state.products) && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, product_list), empty(this.state.products) && React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"There are no products in your cart.\"))))), React.createElement(\"div\", {\n      className: \"checkout-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Total: $\", (getTotal(this.state.products) / 100).toFixed(2)), React.createElement(\"span\", {\n      style: {\n        marginBottom: \"0.4rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Items: \", sumItems(this.state.products)), React.createElement(CheckoutPay, {\n      disabled: !this.state.empties,\n      amount: getTotal(this.state.products),\n      data: _objectSpread({}, data, {\n        products: this.state.products\n      }),\n      chargeCustomer: this.chargeCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nexport default connect(mapStateToProps, {\n  db_get_products,\n  db_charge_customer\n})(withRouter(Checkout));","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/containers/Customer/Checkout.js"],"names":["React","Component","Fragment","Link","withRouter","connect","sumItems","getTotal","db_get_products","db_charge_customer","moment","empty","Navbar","Loading","ErrorBanner","CheckoutPay","ProductRow","Checkout","constructor","props","removeRow","i","setState","state","products","filter","product","index","data","amount","localStorage","setItem","JSON","stringify","onDataChange","e","target","id","value","checkEmpties","arr","key","push","empties","chargeCustomer","resp","complete","error","message","loaded","name","phone","email","org","bind","componentDidMount","getItem","parse","map","pro","Object","assign","find","p","active","items","componentDidUpdate","prevProps","prevState","render","product_list","marginTop","margin","marginBottom","fontSize","textAlign","toFixed","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport sumItems from '../../utils/sumItems';\nimport getTotal from '../../utils/getTotal';\nimport {db_get_products} from \"../../store/actions/products\";\nimport {db_charge_customer} from '../../store/actions/orders';\nimport moment from 'moment';\nimport empty from 'is-empty';\n\nimport Navbar from '../../components/Nav/Navbar';\nimport Loading from '../../components/Graphics/Loading';\nimport ErrorBanner from '../../components/Graphics/ErrorBanner';\nimport CheckoutPay from '../../components/Forms/CheckoutPay';\nimport ProductRow from '../../components/Forms/ProductRow';\n\nclass Checkout extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloaded: false,\n      products: [],\n      data: {\n        name: '',\n        phone: '',\n        email: '',\n        org: '',\n        amount: 0\n      },\n      error: '',\n      empties: false\n\t\t};\n    this.checkEmpties = this.checkEmpties.bind(this);\n\t}\n\n  async componentDidMount() {\n    await this.props.db_get_products();\n  \tconst products = empty(localStorage.getItem(\"products\")) ? [] : await JSON.parse(localStorage.getItem(\"products\")).map(pro => Object.assign(pro, this.props.products.find(p => pro.id == p.id))).filter(product => product.active);\n    localStorage.setItem(\"products\", JSON.stringify(products.filter(product => product.active)));\n    this.setState({\n      loaded: true,\n      products: products,\n      items: sumItems(products),\n      data: {\n        ...this.state.data,\n        amount: getTotal(products)\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.data != prevState.data) {\n      this.checkEmpties();\n    }\n  }\n\n  removeRow = i => {\n    this.setState({\n      ...this.state,\n      products: this.state.products.filter((product, index) => index != i),\n      data: {\n        ...this.state.data,\n        amount: getTotal(this.state.products.filter((product, index) => index != i))\n      }\n    });\n    localStorage.setItem(\"products\", JSON.stringify(this.state.products.filter((product, index) => index != i)));\n  }\n\n  onDataChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        [e.target.id]: e.target.value \n      }\n    });\n  }\n\n  checkEmpties = () => {\n    let arr = [];\n    const {data} = this.state;\n    for (var key in data) {\n      if (empty(data[key])) {\n        arr.push(key);\n      }\n    }\n    if(empty(arr)) {\n      this.setState({\n        ...this.state,\n        empties: true\n      });\n      return true;\n    } else {\n      this.setState({\n        ...this.state,\n        empties: false\n      });\n      return false;\n    }\n  }\n\n  chargeCustomer = data => {\n    const resp = this.props.db_charge_customer(data);\n    if(resp.complete) {\n      this.setState({...this.state, products: []})\n      localStorage.setItem(\"products\", JSON.stringify([]));\n    } else {\n      this.setState({\n        ...this.state,\n        error: resp.message\n      })\n    }\n  }\n\n\trender() {\n    const {data} = this.state;\n\n    let product_list = this.state.products.map((product,i) => \n      <ProductRow \n        product={product}\n        key={i}\n        removeRow={() => this.removeRow(i)}\n      />\n    );\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Navbar active=\"home\" items={sumItems(this.state.products)} toCheckout={() => {}}/>\n        {!empty(this.state.error) && (<ErrorBanner error={this.state.error} onHide={() => this.setState({...this.state, error: ''})}/>)}\n        {!this.state.loaded && (<Loading />)}\n        {this.state.loaded && (<div className=\"dashboard-container\">\n          <div className=\"dashboard-box\" style={{marginTop: \"1rem\"}}>\n            <div className=\"left-div\">\n              <div className=\"personal-info-container\">\n                <h2 style={{margin: \"0\"}}>Personal Info</h2>\n                <span style={{marginBottom: \"0.5rem\", fontSize: \"0.8rem\"}}>*You must fill out all fields before proceeding to payment.</span>\n                <div className=\"personal-info\">\n                  <div className=\"info-side\">\n                    <label>Name:</label>\n                    <input type=\"text\" id=\"name\" className=\"apparel-input\" value={data.name} onChange={this.onDataChange}/>\n                    <label>Phone:</label>\n                    <input type=\"tel\" id=\"phone\" className=\"apparel-input\" value={data.phone} onChange={this.onDataChange}/>\n                  </div>\n                  <div className=\"info-side\">\n                    <label>Email:</label>\n                    <input type=\"email\" id=\"email\" className=\"apparel-input\" value={data.email} onChange={this.onDataChange}/>\n                    <label>Fraternity/Sorority:</label>\n                    <input type=\"text\" id=\"org\" className=\"apparel-input\" value={data.org} onChange={this.onDataChange}/>\n                  </div>\n                </div>\n              </div>\n              <table className=\"product-list\">\n                <tbody className=\"product-table-body\">\n                  <tr className=\"product-header\">\n                    <th className=\"product-head hide\">Product</th>\n                    <th className=\"product-head\">Name</th>\n                    <th className=\"product-head\" style={{textAlign: \"center\"}}>Size</th>\n                    <th className=\"product-head\" style={{textAlign: \"center\"}}>Quantity</th>\n                    <th className=\"product-head\">Price</th>\n                  </tr>\n                  {!empty(this.state.products) && (<Fragment>{product_list}</Fragment>)}\n                  {empty(this.state.products) && (<tr>\n                    <td colSpan=\"5\">There are no products in your cart.</td>\n                  </tr>)}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"checkout-box\">\n              <span>Total: ${(getTotal(this.state.products) / 100).toFixed(2)}</span>\n              <span style={{marginBottom: \"0.4rem\"}}>Items: {sumItems(this.state.products)}</span>\n              <CheckoutPay disabled={!this.state.empties} amount={getTotal(this.state.products)} data={{...data, products: this.state.products}} chargeCustomer={this.chargeCustomer}/>\n            </div>\n          </div>\n        </div>)}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nexport default connect(mapStateToProps,{db_get_products, db_charge_customer})(withRouter(Checkout));\n\n\n"]},"metadata":{},"sourceType":"module"}