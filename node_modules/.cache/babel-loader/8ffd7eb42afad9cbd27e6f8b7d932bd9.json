{"ast":null,"code":"var _jsxFileName = \"/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/AddressBlock.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass AddressBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props$state = this.props.state,\n          data = _this$props$state.data,\n          validation = _this$props$state.validation,\n          empties = _this$props$state.empties;\n    const worker = this.props.worker;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: `text-field ${worker ? 'worker' : ''}`,\n      id: \"address\",\n      onChange: this.props.onChange,\n      value: data.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), empties.includes(\"address\") && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"You must enter an address.\")), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: `text-field ${worker ? 'worker' : ''}`,\n      id: \"city\",\n      onChange: this.props.onChange,\n      value: data.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), empties.includes(\"city\") && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"You must enter a city.\")), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"State\"), !validation.state && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Enter a valid state abbreviation.\"), React.createElement(\"input\", {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      maxLength: \"2\",\n      type: \"text\",\n      className: `text-field ${worker ? 'worker' : ''}`,\n      id: \"state\",\n      onChange: this.props.onStateChange,\n      value: data.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), empties.includes(\"state\") && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"You must enter a state abbreviation.\")), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: `text-field ${worker ? 'worker' : ''}`,\n      id: \"zip\",\n      onChange: this.props.onChange,\n      value: data.zip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), empties.includes(\"zip\") && React.createElement(\"span\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"You must enter a zip code.\")));\n  }\n\n}\n\nexport default AddressBlock;","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/src/components/Forms/AddressBlock.js"],"names":["React","Component","Fragment","AddressBlock","constructor","props","state","render","data","validation","empties","worker","onChange","address","includes","city","textTransform","onStateChange","zip"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nclass AddressBlock extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\n\t\t};\n\t}\n\n\trender() {\n\t\tconst {data, validation, empties} = this.props.state;\n\t\tconst {worker} = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t<span className=\"field-label\">Address</span>\n\t\t\t\t\t<input type=\"text\" className={`text-field ${worker ? 'worker' : ''}`} id=\"address\" onChange={this.props.onChange} value={data.address}/>\n\t\t\t\t\t{empties.includes(\"address\") && (<span className=\"form-error\">You must enter an address.</span>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t<span className=\"field-label\">City</span>\n\t\t\t\t\t<input type=\"text\" className={`text-field ${worker ? 'worker' : ''}`} id=\"city\" onChange={this.props.onChange} value={data.city}/>\n\t\t\t\t\t{empties.includes(\"city\") && (<span className=\"form-error\">You must enter a city.</span>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t<span className=\"field-label\">State</span>\n\t\t\t\t\t{!validation.state && (<span className=\"form-error\">Enter a valid state abbreviation.</span>)}\n\t\t\t\t\t<input style={{textTransform: \"uppercase\"}} maxLength=\"2\" type=\"text\" className={`text-field ${worker ? 'worker' : ''}`} id=\"state\" onChange={this.props.onStateChange} value={data.state}/>\n\t\t\t\t\t{empties.includes(\"state\") && (<span className=\"form-error\">You must enter a state abbreviation.</span>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t<span className=\"field-label\">Zip</span>\n\t\t\t\t\t<input type=\"text\" className={`text-field ${worker ? 'worker' : ''}`} id=\"zip\" onChange={this.props.onChange} value={data.zip}/>\n\t\t\t\t\t{empties.includes(\"zip\") && (<span className=\"form-error\">You must enter a zip code.</span>)}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default AddressBlock;\n"]},"metadata":{},"sourceType":"module"}