{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { INTERNAL_COL_DEFINE } from './utils';\n\nvar ColGroup = function ColGroup(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      expandIconAsCell = _table$props.expandIconAsCell;\n  var fixed = props.fixed;\n  var cols = [];\n\n  if (expandIconAsCell && fixed !== 'right') {\n    cols.push(React.createElement(\"col\", {\n      className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n      key: \"rc-table-expand-icon-col\"\n    }));\n  }\n\n  var leafColumns;\n\n  if (fixed === 'left') {\n    leafColumns = table.columnManager.leftLeafColumns();\n  } else if (fixed === 'right') {\n    leafColumns = table.columnManager.rightLeafColumns();\n  } else {\n    leafColumns = table.columnManager.leafColumns();\n  }\n\n  cols = cols.concat(leafColumns.map(function (_ref2) {\n    var key = _ref2.key,\n        dataIndex = _ref2.dataIndex,\n        width = _ref2.width,\n        additionalProps = _ref2[INTERNAL_COL_DEFINE];\n    var mergedKey = key !== undefined ? key : dataIndex;\n    return React.createElement(\"col\", Object.assign({\n      key: mergedKey,\n      style: {\n        width: width,\n        minWidth: width\n      }\n    }, additionalProps));\n  }));\n  return React.createElement(\"colgroup\", null, cols);\n};\n\nColGroup.contextTypes = {\n  table: PropTypes.any\n};\nexport default ColGroup;","map":{"version":3,"sources":["/Users/jackjoliet/Documents/marketplace/front/node_modules/rc-table/es/ColGroup.js"],"names":["React","PropTypes","INTERNAL_COL_DEFINE","ColGroup","props","_ref","table","_table$props","prefixCls","expandIconAsCell","fixed","cols","push","createElement","className","concat","key","leafColumns","columnManager","leftLeafColumns","rightLeafColumns","map","_ref2","dataIndex","width","additionalProps","mergedKey","undefined","Object","assign","style","minWidth","contextTypes","any"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,mBAAT,QAAoC,SAApC;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC5C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,MAAIC,YAAY,GAAGD,KAAK,CAACF,KAAzB;AAAA,MACII,SAAS,GAAGD,YAAY,CAACC,SAD7B;AAAA,MAEIC,gBAAgB,GAAGF,YAAY,CAACE,gBAFpC;AAGA,MAAIC,KAAK,GAAGN,KAAK,CAACM,KAAlB;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIF,gBAAgB,IAAIC,KAAK,KAAK,OAAlC,EAA2C;AACzCC,IAAAA,IAAI,CAACC,IAAL,CAAUZ,KAAK,CAACa,aAAN,CAAoB,KAApB,EAA2B;AACnCC,MAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUP,SAAV,EAAqB,kBAArB,CADwB;AAEnCQ,MAAAA,GAAG,EAAE;AAF8B,KAA3B,CAAV;AAID;;AAED,MAAIC,WAAJ;;AAEA,MAAIP,KAAK,KAAK,MAAd,EAAsB;AACpBO,IAAAA,WAAW,GAAGX,KAAK,CAACY,aAAN,CAAoBC,eAApB,EAAd;AACD,GAFD,MAEO,IAAIT,KAAK,KAAK,OAAd,EAAuB;AAC5BO,IAAAA,WAAW,GAAGX,KAAK,CAACY,aAAN,CAAoBE,gBAApB,EAAd;AACD,GAFM,MAEA;AACLH,IAAAA,WAAW,GAAGX,KAAK,CAACY,aAAN,CAAoBD,WAApB,EAAd;AACD;;AAEDN,EAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAYE,WAAW,CAACI,GAAZ,CAAgB,UAAUC,KAAV,EAAiB;AAClD,QAAIN,GAAG,GAAGM,KAAK,CAACN,GAAhB;AAAA,QACIO,SAAS,GAAGD,KAAK,CAACC,SADtB;AAAA,QAEIC,KAAK,GAAGF,KAAK,CAACE,KAFlB;AAAA,QAGIC,eAAe,GAAGH,KAAK,CAACpB,mBAAD,CAH3B;AAIA,QAAIwB,SAAS,GAAGV,GAAG,KAAKW,SAAR,GAAoBX,GAApB,GAA0BO,SAA1C;AACA,WAAOvB,KAAK,CAACa,aAAN,CAAoB,KAApB,EAA2Be,MAAM,CAACC,MAAP,CAAc;AAC9Cb,MAAAA,GAAG,EAAEU,SADyC;AAE9CI,MAAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAEA,KADF;AAELO,QAAAA,QAAQ,EAAEP;AAFL;AAFuC,KAAd,EAM/BC,eAN+B,CAA3B,CAAP;AAOD,GAbkB,CAAZ,CAAP;AAcA,SAAOzB,KAAK,CAACa,aAAN,CAAoB,UAApB,EAAgC,IAAhC,EAAsCF,IAAtC,CAAP;AACD,CAxCD;;AA0CAR,QAAQ,CAAC6B,YAAT,GAAwB;AACtB1B,EAAAA,KAAK,EAAEL,SAAS,CAACgC;AADK,CAAxB;AAGA,eAAe9B,QAAf","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { INTERNAL_COL_DEFINE } from './utils';\n\nvar ColGroup = function ColGroup(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      expandIconAsCell = _table$props.expandIconAsCell;\n  var fixed = props.fixed;\n  var cols = [];\n\n  if (expandIconAsCell && fixed !== 'right') {\n    cols.push(React.createElement(\"col\", {\n      className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n      key: \"rc-table-expand-icon-col\"\n    }));\n  }\n\n  var leafColumns;\n\n  if (fixed === 'left') {\n    leafColumns = table.columnManager.leftLeafColumns();\n  } else if (fixed === 'right') {\n    leafColumns = table.columnManager.rightLeafColumns();\n  } else {\n    leafColumns = table.columnManager.leafColumns();\n  }\n\n  cols = cols.concat(leafColumns.map(function (_ref2) {\n    var key = _ref2.key,\n        dataIndex = _ref2.dataIndex,\n        width = _ref2.width,\n        additionalProps = _ref2[INTERNAL_COL_DEFINE];\n    var mergedKey = key !== undefined ? key : dataIndex;\n    return React.createElement(\"col\", Object.assign({\n      key: mergedKey,\n      style: {\n        width: width,\n        minWidth: width\n      }\n    }, additionalProps));\n  }));\n  return React.createElement(\"colgroup\", null, cols);\n};\n\nColGroup.contextTypes = {\n  table: PropTypes.any\n};\nexport default ColGroup;"]},"metadata":{},"sourceType":"module"}